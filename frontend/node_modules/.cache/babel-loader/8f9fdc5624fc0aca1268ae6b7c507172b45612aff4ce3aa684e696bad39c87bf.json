{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\MeshTree\\\\frontend\\\\src\\\\GraphWrapper2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\nimport forceAtlas2, { ForceAtlas2SynchronousLayoutParameters } from \"graphology-layout-forceatlas2\";\nimport { useLayoutFactory } from \"@react-sigma/layout-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodes = [{\n  id: 'n1',\n  label: 'Ella Fitzgerald: 1917',\n  size: 25,\n  color: 'red'\n}, {\n  id: 'n2',\n  label: 'Frank Sinatra: 1915',\n  size: 25,\n  color: 'red'\n}, {\n  id: 'n3',\n  label: 'Billie Holiday: 1915',\n  size: 25,\n  color: 'red'\n}, {\n  id: 'n4',\n  label: 'Louis Armstrong: 1901',\n  size: 25,\n  color: 'yellow'\n}, {\n  id: 'n5',\n  label: 'Nina Simone: 1933',\n  size: 25,\n  color: 'orange'\n}, {\n  id: 'n6',\n  label: 'Nat King Cole: 1919',\n  size: 25,\n  color: 'red'\n}, {\n  id: 'n7',\n  label: 'Gregory Porter: 1971',\n  size: 25,\n  color: 'teal'\n}, {\n  id: 'n8',\n  label: 'Sarah Vaughan: 1924',\n  size: 25,\n  color: 'orange'\n}, {\n  id: 'n9',\n  label: 'Michael Bublé: 1975',\n  size: 25,\n  color: 'teal'\n}];\nconst GraphComponent = () => {\n  _s();\n  const sigma = useSigma();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph();\n    nodes.forEach(node => {\n      graph.addNode(node.id, {\n        label: node.label,\n        size: node.size,\n        color: node.color\n      });\n    });\n    edges.forEach(edge => {\n      graph.addEdge(edge.source, edge.target);\n    });\n  }, [sigma]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(GraphComponent, \"R0bJCO5eGdK7ZLFJaGp7Ix0qrBw=\", false, function () {\n  return [useSigma];\n});\n_c = GraphComponent;\nconst GraphWrapper = () => /*#__PURE__*/_jsxDEV(SigmaContainer, {\n  children: /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 5\n}, this);\n_c2 = GraphWrapper;\nexport default GraphWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphComponent\");\n$RefreshReg$(_c2, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","useRef","useState","SigmaContainer","useSigma","Graph","forceAtlas2","ForceAtlas2SynchronousLayoutParameters","useLayoutFactory","jsxDEV","_jsxDEV","nodes","id","label","size","color","GraphComponent","_s","sigma","containerRef","graph","forEach","node","addNode","edges","edge","addEdge","source","target","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","GraphWrapper","children","_c2","$RefreshReg$"],"sources":["D:/code/MeshTree/frontend/src/GraphWrapper2.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\r\nimport Graph from 'graphology';\r\nimport forceAtlas2, { ForceAtlas2SynchronousLayoutParameters } from \"graphology-layout-forceatlas2\";\r\nimport { useLayoutFactory } from \"@react-sigma/layout-core\";\r\n\r\nconst nodes = [\r\n  { id: 'n1', label: 'Ella Fitzgerald: 1917', size: 25, color: 'red' },\r\n  { id: 'n2', label: 'Frank Sinatra: 1915', size: 25, color: 'red' },\r\n  { id: 'n3', label: 'Billie Holiday: 1915', size: 25, color: 'red' },\r\n  { id: 'n4', label: 'Louis Armstrong: 1901', size: 25, color: 'yellow' },\r\n  { id: 'n5', label: 'Nina Simone: 1933', size: 25, color: 'orange' },\r\n  { id: 'n6', label: 'Nat King Cole: 1919', size: 25, color: 'red' },\r\n  { id: 'n7', label: 'Gregory Porter: 1971', size: 25, color: 'teal' },\r\n  { id: 'n8', label: 'Sarah Vaughan: 1924', size: 25, color: 'orange' },\r\n  { id: 'n9', label: 'Michael Bublé: 1975', size: 25, color: 'teal' }\r\n];\r\n\r\n\r\n\r\n\r\nconst GraphComponent = () => {\r\n  const sigma = useSigma();\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() =>{\r\n\r\n  const graph = new Graph();\r\n\r\n  nodes.forEach(node => {\r\n    graph.addNode(node.id, {\r\n      label: node.label,\r\n      size: node.size,\r\n      color: node.color\r\n    });\r\n  });\r\n\r\n  edges.forEach(edge => {\r\n   graph.addEdge(edge.source, edge.target);\r\n  });\r\n  \r\n  }, [sigma]);\r\n  return <div ref={containerRef}  />\r\n}\r\n\r\n\r\nconst GraphWrapper = () => (\r\n    <SigmaContainer>\r\n      <GraphComponent />\r\n    </SigmaContainer>\r\n  );\r\n  \r\nexport default GraphWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}