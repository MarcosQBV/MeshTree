{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\MeshTree\\\\frontend\\\\src\\\\GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\nimport { useWorkerLayoutForceAtlas2 } from '@react-sigma/layout-forceatlas2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodes = [{\n  id: 'n1',\n  label: 'Ella Fitzgerald: 1917'\n}, {\n  id: 'n2',\n  label: 'Frank Sinatra: 1915'\n}, {\n  id: 'n3',\n  label: 'Billie Holiday: 1915'\n}, {\n  id: 'n4',\n  label: 'Louis Armstrong: 1901'\n}, {\n  id: 'n5',\n  label: 'Nina Simone: 1933'\n}, {\n  id: 'n6',\n  label: 'Nat King Cole: 1919'\n}, {\n  id: 'n7',\n  label: 'Gregory Porter: 1971'\n}, {\n  id: 'n8',\n  label: 'Sarah Vaughan: 1924'\n}, {\n  id: 'n9',\n  label: 'Michael Bublé: 1975'\n}];\nconst edges = [{\n  source: 'n1',\n  target: 'n2'\n}, {\n  source: 'n1',\n  target: 'n3'\n}, {\n  source: 'n1',\n  target: 'n4'\n}, {\n  source: 'n1',\n  target: 'n5'\n}, {\n  source: 'n1',\n  target: 'n6'\n}, {\n  source: 'n1',\n  target: 'n7'\n}, {\n  source: 'n1',\n  target: 'n8'\n}, {\n  source: 'n1',\n  target: 'n9'\n}];\nconst GraphComponent = () => {\n  _s();\n  const sigma = useSigma();\n  const containerRef = useRef(null);\n  useWorkerLayoutForceAtlas2({\n    settings: {\n      gravity: 1,\n      scalingRatio: 2,\n      strongGravityMode: true,\n      slowDown: 1\n    },\n    iterations: 1000 // Adjust the number of iterations as needed\n  });\n  useEffect(() => {\n    const graph = new Graph();\n    // Add nodes\n    nodes.forEach(node => {\n      graph.addNode(node.id, {\n        label: node.label,\n        size: 20,\n        color: 'black'\n      });\n    });\n\n    // Add edges\n    edges.forEach(edge => {\n      graph.addEdge(edge.source, edge.target);\n    });\n    if (sigma) {\n      sigma.setGraph(graph);\n      sigma.refresh();\n    }\n  }, [sigma]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n_s(GraphComponent, \"KJbcNMJYKbZzQmM7KcGkFEkqL70=\", false, function () {\n  return [useSigma, useWorkerLayoutForceAtlas2];\n});\n_c = GraphComponent;\nconst GraphWrapper = () => /*#__PURE__*/_jsxDEV(SigmaContainer, {\n  children: /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 3\n}, this);\n_c2 = GraphWrapper;\nexport default GraphWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphComponent\");\n$RefreshReg$(_c2, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","useRef","SigmaContainer","useSigma","Graph","useWorkerLayoutForceAtlas2","jsxDEV","_jsxDEV","nodes","id","label","edges","source","target","GraphComponent","_s","sigma","containerRef","settings","gravity","scalingRatio","strongGravityMode","slowDown","iterations","graph","forEach","node","addNode","size","color","edge","addEdge","setGraph","refresh","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","GraphWrapper","children","_c2","$RefreshReg$"],"sources":["D:/code/MeshTree/frontend/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\r\nimport Graph from 'graphology';\r\nimport { useWorkerLayoutForceAtlas2 } from '@react-sigma/layout-forceatlas2';\r\n\r\nconst nodes = [\r\n  { id: 'n1', label: 'Ella Fitzgerald: 1917' },\r\n  { id: 'n2', label: 'Frank Sinatra: 1915' },\r\n  { id: 'n3', label: 'Billie Holiday: 1915' },\r\n  { id: 'n4', label: 'Louis Armstrong: 1901' },\r\n  { id: 'n5', label: 'Nina Simone: 1933' },\r\n  { id: 'n6', label: 'Nat King Cole: 1919' },\r\n  { id: 'n7', label: 'Gregory Porter: 1971' },\r\n  { id: 'n8', label: 'Sarah Vaughan: 1924' },\r\n  { id: 'n9', label: 'Michael Bublé: 1975' }\r\n];\r\n\r\nconst edges = [\r\n  { source: 'n1', target: 'n2' },\r\n  { source: 'n1', target: 'n3' },\r\n  { source: 'n1', target: 'n4' },\r\n  { source: 'n1', target: 'n5' },\r\n  { source: 'n1', target: 'n6' },\r\n  { source: 'n1', target: 'n7' },\r\n  { source: 'n1', target: 'n8' },\r\n  { source: 'n1', target: 'n9' }\r\n];\r\n\r\nconst GraphComponent = () => {\r\n  const sigma = useSigma();\r\n  const containerRef = useRef(null);\r\n\r\n  useWorkerLayoutForceAtlas2({\r\n    settings: {\r\n      gravity: 1,\r\n      scalingRatio: 2,\r\n      strongGravityMode: true,\r\n      slowDown: 1\r\n    },\r\n    iterations: 1000, // Adjust the number of iterations as needed\r\n  });\r\n\r\n  useEffect(() => {\r\n    const graph = new Graph();\r\n    // Add nodes\r\n    nodes.forEach(node => {\r\n      graph.addNode(node.id, {\r\n        label: node.label,\r\n        size: 20,\r\n        color: 'black'\r\n      });\r\n    });\r\n\r\n    // Add edges\r\n    edges.forEach(edge => {\r\n      graph.addEdge(edge.source, edge.target);\r\n    });\r\n\r\n    if (sigma) {\r\n      sigma.setGraph(graph);\r\n      sigma.refresh();\r\n    }\r\n  }, [sigma]);\r\n\r\n  return <div ref={containerRef} style={{ width: '100%', height: '500px' }} />;\r\n};\r\n\r\nconst GraphWrapper = () => (\r\n  <SigmaContainer>\r\n    <GraphComponent />\r\n  </SigmaContainer>\r\n);\r\n\r\nexport default GraphWrapper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}