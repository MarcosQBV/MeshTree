{"ast":null,"code":"import * as t from \"react\";\nimport e, { useRef as r, useCallback as a, useState as n, useEffect as s } from \"react\";\nimport { useSigma as o, isEqual as i } from \"@react-sigma/core\";\nfunction l(t, e) {\n  return (n = e) => {\n    const s = o(),\n      l = r(e);\n    return i(l.current, n) || (l.current = n), {\n      positions: a(() => l.current ? t(s.getGraph(), l.current) : {}, [s, l]),\n      assign: a(() => {\n        l.current && t.assign(s.getGraph(), l.current);\n      }, [s, l])\n    };\n  };\n}\nfunction c(t) {\n  return e => {\n    const l = o(),\n      [c, u] = n(!1),\n      [p, g] = n(null),\n      m = r();\n    return i(m.current, e) || (m.current = e), s(() => {\n      u(!1);\n      let e = null;\n      return m.current && (e = new t(l.getGraph(), m.current)), g(e), () => {\n        null !== e && e.kill();\n      };\n    }, [l, m, g, u]), {\n      stop: a(() => {\n        p && (p.stop(), u(!1));\n      }, [p, u]),\n      start: a(() => {\n        p && (p.start(), u(!0));\n      }, [p, u]),\n      kill: a(() => {\n        p && p.kill(), u(!1);\n      }, [p, u]),\n      isRunning: c\n    };\n  };\n}\nvar u;\nfunction p() {\n  return p = Object.assign ? Object.assign.bind() : function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var r = arguments[e];\n      for (var a in r) Object.prototype.hasOwnProperty.call(r, a) && (t[a] = r[a]);\n    }\n    return t;\n  }, p.apply(this, arguments);\n}\nvar g,\n  m = function (e) {\n    return t.createElement(\"svg\", p({\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"aria-hidden\": \"true\",\n      className: \"play-solid_svg__svg-inline--fa play-solid_svg__fa-play play-solid_svg__fa-w-14\",\n      \"data-icon\": \"play\",\n      \"data-prefix\": \"fas\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, e), u || (u = t.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M424.4 214.7 72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6\"\n    })));\n  };\nfunction f() {\n  return f = Object.assign ? Object.assign.bind() : function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var r = arguments[e];\n      for (var a in r) Object.prototype.hasOwnProperty.call(r, a) && (t[a] = r[a]);\n    }\n    return t;\n  }, f.apply(this, arguments);\n}\nvar d = function (e) {\n  return t.createElement(\"svg\", f({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    className: \"stop-solid_svg__svg-inline--fa stop-solid_svg__fa-stop stop-solid_svg__fa-w-14\",\n    \"data-icon\": \"stop\",\n    \"data-prefix\": \"fas\",\n    viewBox: \"0 0 448 512\",\n    width: \"1em\",\n    height: \"1em\"\n  }, e), g || (g = t.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48\"\n  })));\n};\nfunction h({\n  id: t,\n  className: r,\n  style: a,\n  layout: n,\n  settings: i,\n  autoRunFor: l,\n  children: c,\n  labels: u = {}\n}) {\n  const p = o(),\n    {\n      stop: g,\n      start: f,\n      isRunning: h\n    } = n(i),\n    v = {\n      className: `react-sigma-control ${r || \"\"}`,\n      id: t,\n      style: a\n    };\n  return s(() => {\n    if (!p) return;\n    let t = null;\n    return void 0 !== l && l > -1 && p.getGraph().order > 0 && (f(), t = l > 0 ? window.setTimeout(() => {\n      g();\n    }, l) : null), () => {\n      t && clearTimeout(t);\n    };\n  }, [l, f, g, p]), e.createElement(\"div\", Object.assign({}, v), e.createElement(\"button\", {\n    onClick: () => h ? g() : f(),\n    title: h ? u.stop || \"Stop the layout animation\" : u.start || \"Start the layout animation\"\n  }, c && !h && c[0], c && h && c[1], !c && !h && e.createElement(m, {\n    style: {\n      width: \"1em\"\n    }\n  }), !c && h && e.createElement(d, {\n    style: {\n      width: \"1em\"\n    }\n  })));\n}\nexport { h as WorkerLayoutControl, l as useLayoutFactory, c as useWorkerLayoutFactory };","map":{"version":3,"names":["l","t","e","n","s","o","r","i","current","positions","a","getGraph","assign","c","u","p","g","m","kill","stop","start","isRunning","Object","bind","arguments","length","prototype","hasOwnProperty","call","apply","SvgPlaySolid","createElement","xmlns","className","viewBox","width","height","fill","d","f","SvgStopSolid","h","id","style","layout","settings","autoRunFor","children","labels","v","order","window","setTimeout","clearTimeout","onClick","title","WorkerLayoutControl","useLayoutFactory","useWorkerLayoutFactory"],"sources":["D:\\code\\MeshTree\\frontend\\node_modules\\@react-sigma\\layout-core\\src\\useLayoutFactory.ts","D:\\code\\MeshTree\\frontend\\node_modules\\@react-sigma\\layout-core\\src\\useWorkerLayoutFactory.ts","D:\\code\\MeshTree\\frontend\\node_modules\\@react-sigma\\layout-core\\src\\assets\\icons\\play-solid.svg","D:\\code\\MeshTree\\frontend\\node_modules\\@react-sigma\\layout-core\\src\\assets\\icons\\stop-solid.svg","D:\\code\\MeshTree\\frontend\\node_modules\\@react-sigma\\layout-core\\src\\WorkerLayoutControl.tsx"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport Graph from \"graphology\";\n\nimport { useSigma, isEqual } from \"@react-sigma/core\";\n\n/**\n * Generic type for Graphology layout.\n */\ninterface GraphologyLayout<T> {\n  (graph: Graph, options: T): { [node: string]: { [dimension: string]: number } };\n  assign(graph: Graph, options: T): void;\n}\n\n/**\n * Generic type for layout hooks.\n */\nexport type LayoutHook<T> = (settings?: T) => {\n  /**\n   * Returns a positions map by node key.\n   */\n  positions: () => { [node: string]: { [dimension: string]: number } };\n  /**\n   * Assign layout node's position into the sigma graph.\n   */\n  assign: () => void;\n};\n\n/**\n * Factory for layout hook.\n */\nexport function useLayoutFactory<T>(layout: GraphologyLayout<T>, defaultSettings: T): LayoutHook<T> {\n  const hook: LayoutHook<T> = (parameter: T = defaultSettings) => {\n    const sigma = useSigma();\n\n    // Default layout settings\n    const settings = useRef<T>(defaultSettings);\n    if (!isEqual(settings.current, parameter)) settings.current = parameter;\n\n    const positions = useCallback(() => {\n      if (settings.current) return layout(sigma.getGraph(), settings.current);\n      else return {};\n    }, [sigma, settings]);\n\n    const assign = useCallback(() => {\n      if (settings.current) {\n        layout.assign(sigma.getGraph(), settings.current);\n      }\n    }, [sigma, settings]);\n\n    return { positions, assign };\n  };\n\n  return hook;\n}\n","import { useCallback, useRef, useState, useEffect } from \"react\";\nimport Graph from \"graphology\";\n\nimport { useSigma, isEqual } from \"@react-sigma/core\";\n\nexport type LayoutWorkerHook<T> = (settings: T) => {\n  stop: () => void;\n  start: () => void;\n  kill: () => void;\n  isRunning: boolean;\n};\n\ninterface GraphologyWorkerLayout {\n  stop: () => void;\n  start: () => void;\n  kill: () => void;\n}\n\ninterface GraphologyWorkerLayoutConstructor<T> {\n  new (graph: Graph, settings: T): GraphologyWorkerLayout;\n}\n\nexport function useWorkerLayoutFactory<T>(worker: GraphologyWorkerLayoutConstructor<T>): LayoutWorkerHook<T> {\n  const hook: LayoutWorkerHook<T> = (parameter: T) => {\n    const sigma = useSigma();\n    const [isRunning, setIsRunning] = useState<boolean>(false);\n    const [layout, setLayout] = useState<GraphologyWorkerLayout | null>(null);\n    const settings = useRef<T>();\n    if (!isEqual(settings.current, parameter)) settings.current = parameter;\n\n    useEffect(() => {\n      setIsRunning(false);\n      let newLayout: GraphologyWorkerLayout | null = null;\n      if (settings.current) newLayout = new worker(sigma.getGraph(), settings.current);\n      setLayout(newLayout);\n      return () => {\n        if (newLayout !== null) newLayout.kill();\n      };\n    }, [sigma, settings, setLayout, setIsRunning]);\n\n    const stop = useCallback(() => {\n      if (layout) {\n        layout.stop();\n        setIsRunning(false);\n      }\n    }, [layout, setIsRunning]);\n\n    const start = useCallback(() => {\n      if (layout) {\n        layout.start();\n        setIsRunning(true);\n      }\n    }, [layout, setIsRunning]);\n\n    const kill = useCallback(() => {\n      if (layout) {\n        layout.kill();\n      }\n      setIsRunning(false);\n    }, [layout, setIsRunning]);\n\n    return { stop, start, kill, isRunning };\n  };\n  return hook;\n}\n","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22play%22%20class%3D%22svg-inline--fa%20fa-play%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M424.4%20214.7L72.4%206.6C43.8-10.3%200%206.1%200%2047.9V464c0%2037.5%2040.7%2060.1%2072.4%2041.3l352-208c31.4-18.5%2031.5-64.1%200-82.6z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22stop%22%20class%3D%22svg-inline--fa%20fa-stop%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M400%2032H48C21.5%2032%200%2053.5%200%2080v352c0%2026.5%2021.5%2048%2048%2048h352c26.5%200%2048-21.5%2048-48V80c0-26.5-21.5-48-48-48z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","import React, { useEffect, CSSProperties } from \"react\";\n\nimport { useSigma } from \"@react-sigma/core\";\nimport { ReactComponent as StartLayoutIcon } from \"./assets/icons/play-solid.svg\";\nimport { ReactComponent as StopLayoutIcon } from \"./assets/icons/stop-solid.svg\";\nimport { LayoutWorkerHook } from \"./useWorkerLayoutFactory\";\n\ntype WorkerLayoutLabelKeys = \"start\" | \"stop\";\n\n/**\n * Properties for `WorkerLayoutControl` component\n */\nexport interface WorkerLayoutControlProps<T> {\n  /**\n   * HTML id\n   */\n  id?: string;\n\n  /**\n   * HTML class\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n\n  /**\n   * The layout hook to use\n   */\n  layout: LayoutWorkerHook<T>;\n\n  /**\n   * Settings of the layout.\n   */\n  settings: T;\n\n  /**\n   * Option to tell what we do when the component is mounted\n   *  - <code>-1</code> means that we do nothing (it's the same as no value)\n   *  - <code>0</code> means that we start the algo (and don't auto stop it)\n   *  - <code>X</code> mans that we start the algo, and stop it after X milliseconds\n   */\n  autoRunFor?: number;\n\n  /**\n   * It's possible to customize the button, by passing to JSX Element.\n   * First one is for the \"start layout\", and the second to \"stop layout\".\n   * Example :\n   * ```jsx\n   * <WorkerLayoutControl>\n   *   <>\n   *     <span>Start</span>\n   *     <span>Stop</span>\n   *   </>\n   * </WorkerLayoutControl>\n   * ```\n   */\n  children?: [JSX.Element, JSX.Element];\n\n  /**\n   * Map of the labels we use in the component.\n   * This is usefull for I18N\n   */\n  labels?: { [Key in WorkerLayoutLabelKeys]?: string };\n}\n\nexport function WorkerLayoutControl<T>({\n  id,\n  className,\n  style,\n  layout,\n  settings,\n  autoRunFor,\n  children,\n  labels = {},\n}: WorkerLayoutControlProps<T>) {\n  // Get Sigma\n  const sigma = useSigma();\n  // Get layout\n  const { stop, start, isRunning } = layout(settings);\n  // Common html props for the div\n  const props = {\n    className: `react-sigma-control ${className || \"\"}`,\n    id,\n    style,\n  };\n\n  /**\n   * Init component when Sigma or component settings change.\n   */\n  useEffect(() => {\n    if (!sigma) {\n      return;\n    }\n\n    // we run the algo\n    let timeout: number | null = null;\n    if (autoRunFor !== undefined && autoRunFor > -1 && sigma.getGraph().order > 0) {\n      start();\n      // set a timeout to stop it\n      timeout =\n        autoRunFor > 0\n          ? window.setTimeout(() => {\n              stop();\n            }, autoRunFor)\n          : null;\n    }\n\n    //cleaning\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, [autoRunFor, start, stop, sigma]);\n\n  return (\n    <div {...props}>\n      <button\n        onClick={() => (isRunning ? stop() : start())}\n        title={\n          isRunning ? labels[\"stop\"] || \"Stop the layout animation\" : labels[\"start\"] || \"Start the layout animation\"\n        }\n      >\n        {children && !isRunning && children[0]}\n        {children && isRunning && children[1]}\n        {!children && !isRunning && <StartLayoutIcon style={{ width: \"1em\" }} />}\n        {!children && isRunning && <StopLayoutIcon style={{ width: \"1em\" }} />}\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;;AA8BgB,SAAAA,EAAoBC,CAAA,EAA6BC,CAAA;EAsB/D,OArB4B,CAACC,CAAA,GAAeD,CAAA;IAC1C,MAAME,CAAA,GAAQC,CAAA;MAGRL,CAAA,GAAWM,CAAA,CAAUJ,CAAA;IAc3B,OAbKK,CAAA,CAAQP,CAAA,CAASQ,OAAA,EAASL,CAAA,MAAYH,CAAA,CAASQ,OAAA,GAAUL,CAAA,GAavD;MAAEM,SAAA,EAXSC,CAAA,CAAY,MACxBV,CAAA,CAASQ,OAAA,GAAgBP,CAAA,CAAOG,CAAA,CAAMO,QAAA,IAAYX,CAAA,CAASQ,OAAA,IACnD,IACX,CAACJ,CAAA,EAAOJ,CAAA;MAQSY,MAAA,EANLF,CAAA,CAAY;QACrBV,CAAA,CAASQ,OAAA,IACXP,CAAA,CAAOW,MAAA,CAAOR,CAAA,CAAMO,QAAA,IAAYX,CAAA,CAASQ,OAAA,CAC1C;MAAA,GACA,CAACJ,CAAA,EAAOJ,CAAA;IAAA,CAEiB;EAAA,CAIhC;AAAA;AC/BM,SAAUa,EAA0BZ,CAAA;EAyCxC,OAxCmCC,CAAA;IACjC,MAAMF,CAAA,GAAQK,CAAA;MAAA,CACPQ,CAAA,EAAWC,CAAA,IAAgBX,CAAA;MAAA,CAC3BY,CAAA,EAAQC,CAAA,IAAab,CAAA,CAAwC;MAC9Dc,CAAA,GAAWX,CAAA;IAkCjB,OAjCKC,CAAA,CAAQU,CAAA,CAAST,OAAA,EAASN,CAAA,MAAYe,CAAA,CAAST,OAAA,GAAUN,CAAA,GAE9DE,CAAA;MACEU,CAAA;MACA,IAAIZ,CAAA,GAA2C;MAG/C,OAFIe,CAAA,CAAST,OAAA,KAASN,CAAA,GAAY,IAAID,CAAA,CAAOD,CAAA,CAAMW,QAAA,IAAYM,CAAA,CAAST,OAAA,IACxEQ,CAAA,CAAUd,CAAA,GACH;QACa,SAAdA,CAAA,IAAoBA,CAAA,CAAUgB,IAAA;MAAA,CACnC;IAAA,GACA,CAAClB,CAAA,EAAOiB,CAAA,EAAUD,CAAA,EAAWF,CAAA,IAuBzB;MAAEK,IAAA,EArBIT,CAAA,CAAY;QACnBK,CAAA,KACFA,CAAA,CAAOI,IAAA,IACPL,CAAA,KAED;MAAA,IAACC,CAAA,EAAQD,CAAA;MAgBGM,KAAA,EAdDV,CAAA;QACRK,CAAA,KACFA,CAAA,CAAOK,KAAA,IACPN,CAAA,EAAa,GAEd;MAAA,IAACC,CAAA,EAAQD,CAAA;MASUI,IAAA,EAPTR,CAAA,CAAY;QACnBK,CAAA,IACFA,CAAA,CAAOG,IAAA,IAETJ,CAAA,IAAmB;MAAA,GAClB,CAACC,CAAA,EAAQD,CAAA;MAEgBO,SAAA,EAAAR;IAAA;EAAA,CAGhC;AAAA;AChEA,IAAIC,CAAA;AACJ,SAASC,EAAA;EAAiS,OAApRA,CAAA,GAAWO,MAAA,CAAOV,MAAA,GAASU,MAAA,CAAOV,MAAA,CAAOW,IAAA,KAAS,UAAUtB,CAAA;IAAU,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAIsB,SAAA,CAAUC,MAAA,EAAQvB,CAAA,IAAK;MAAE,IAAII,CAAA,GAASkB,SAAA,CAAUtB,CAAA;MAAI,KAAK,IAAIQ,CAAA,IAAOJ,CAAA,EAAcgB,MAAA,CAAOI,SAAA,CAAUC,cAAA,CAAeC,IAAA,CAAKtB,CAAA,EAAQI,CAAA,MAAQT,CAAA,CAAOS,CAAA,IAAOJ,CAAA,CAAOI,CAAA;IAAA;IAAY,OAAOT,CAAS;EAAA,GAASc,CAAA,CAASc,KAAA,CAAM,MAAML,SAAA,CAAa;AAAA;AAEnV,ICHIR,CAAA;EDGAC,CAAA,GAAe,SAAAa,CAAsB5B,CAAA;IACvC,OAAoBD,CAAA,CAAM8B,aAAA,CAAc,OAAOhB,CAAA,CAAS;MACtDiB,KAAA,EAAO;MACP,eAAe;MACfC,SAAA,EAAW;MACX,aAAa;MACb,eAAe;MACfC,OAAA,EAAS;MACTC,KAAA,EAAO;MACPC,MAAA,EAAQ;IAAA,GACPlC,CAAA,GAAQY,CAAA,KAAUA,CAAA,GAAqBb,CAAA,CAAM8B,aAAA,CAAc,QAAQ;MACpEM,IAAA,EAAM;MACNC,CAAA,EAAG;IAAA,IAEP;EAAA;AChBA,SAASC,EAAA;EAAiS,OAApRA,CAAA,GAAWjB,MAAA,CAAOV,MAAA,GAASU,MAAA,CAAOV,MAAA,CAAOW,IAAA,KAAS,UAAUtB,CAAA;IAAU,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAIsB,SAAA,CAAUC,MAAA,EAAQvB,CAAA,IAAK;MAAE,IAAII,CAAA,GAASkB,SAAA,CAAUtB,CAAA;MAAI,KAAK,IAAIQ,CAAA,IAAOJ,CAAA,EAAcgB,MAAA,CAAOI,SAAA,CAAUC,cAAA,CAAeC,IAAA,CAAKtB,CAAA,EAAQI,CAAA,MAAQT,CAAA,CAAOS,CAAA,IAAOJ,CAAA,CAAOI,CAAA;IAAA;IAAY,OAAOT,CAAS;EAAA,GAASsC,CAAA,CAASV,KAAA,CAAM,MAAML,SAAA,CAAa;AAAA;AAEnV,IAAIc,CAAA,GAAe,SAAAE,CAAsBtC,CAAA;EACvC,OAAoBD,CAAA,CAAM8B,aAAA,CAAc,OAAOQ,CAAA,CAAS;IACtDP,KAAA,EAAO;IACP,eAAe;IACfC,SAAA,EAAW;IACX,aAAa;IACb,eAAe;IACfC,OAAA,EAAS;IACTC,KAAA,EAAO;IACPC,MAAA,EAAQ;EAAA,GACPlC,CAAA,GAAQc,CAAA,KAAUA,CAAA,GAAqBf,CAAA,CAAM8B,aAAA,CAAc,QAAQ;IACpEM,IAAA,EAAM;IACNC,CAAA,EAAG;EAAA,IAEP;AAAA;ACmDM,SAAUG,EAAA;EAAuBC,EAAA,EACrCzC,CAAA;EAAEgC,SAAA,EACF3B,CAAA;EAASqC,KAAA,EACTjC,CAAA;EAAKkC,MAAA,EACLzC,CAAA;EAAM0C,QAAA,EACNtC,CAAA;EAAQuC,UAAA,EACR9C,CAAA;EAAU+C,QAAA,EACVlC,CAAA;EAAQmC,MAAA,EACRlC,CAAA,GAAS,CAAE;AAAA;EAGX,MAAMC,CAAA,GAAQV,CAAA;IAAA;MAERc,IAAA,EAAEH,CAAA;MAAII,KAAA,EAAEmB,CAAA;MAAKlB,SAAA,EAAEoB;IAAA,IAActC,CAAA,CAAOI,CAAA;IAEpC0C,CAAA,GAAQ;MACZhB,SAAA,EAAW,uBAAuB3B,CAAA,IAAa;MAC/CoC,EAAA,EAAAzC,CAAA;MACA0C,KAAA,EAgCFjC;IAAA;EAAA,OA1BAN,CAAA,CAAU;IACR,KAAKW,CAAA,EACH;IAIF,IAAId,CAAA,GAAyB;IAa7B,kBAZID,CAAA,IAA4BA,CAAA,IAAc,KAAKe,CAAA,CAAMJ,QAAA,GAAWuC,KAAA,GAAQ,MAC1EX,CAAA,IAEAtC,CAAA,GACED,CAAA,GAAa,IACTmD,MAAA,CAAOC,UAAA,CAAW;MAChBpC,CAAA,EAAM;IAAA,GACLhB,CAAA,IACH,OAID;MACDC,CAAA,IACFoD,YAAA,CAAapD,CAAA;IAAA,CAEhB;EAAA,GACA,CAACD,CAAA,EAAYuC,CAAA,EAAOvB,CAAA,EAAMD,CAAA,IAG3Bb,CAAA,CAAA6B,aAAA,QAAAT,MAAA,CAAAV,MAAA,KAASqC,CAAA,GACP/C,CAAA,CAAA6B,aAAA;IACEuB,OAAA,EAASA,CAAA,KAAOb,CAAA,GAAYzB,CAAA,KAASuB,CAAA;IACrCgB,KAAA,EACEd,CAAA,GAAY3B,CAAA,CAAaK,IAAA,IAAK,8BAA8BL,CAAA,CAAcM,KAAA,IAAK;EAAA,GAGhFP,CAAA,KAAa4B,CAAA,IAAa5B,CAAA,CAAS,IACnCA,CAAA,IAAY4B,CAAA,IAAa5B,CAAA,CAAS,KACjCA,CAAA,KAAa4B,CAAA,IAAavC,CAAA,CAAC6B,aAAA,CAAAd,CAAA,EAAgB;IAAA0B,KAAA,EAAO;MAAER,KAAA,EAAO;IAAA;EAAA,KAC3DtB,CAAA,IAAY4B,CAAA,IAAavC,CAAA,CAAC6B,aAAA,CAAAO,CAAA;IAAeK,KAAA,EAAO;MAAER,KAAA,EAAO;IAAA;EAAA,IAInE;AAAA;AAAA,SAAAM,CAAA,IAAAe,mBAAA,EAAAxD,CAAA,IAAAyD,gBAAA,EAAA5C,CAAA,IAAA6C,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}