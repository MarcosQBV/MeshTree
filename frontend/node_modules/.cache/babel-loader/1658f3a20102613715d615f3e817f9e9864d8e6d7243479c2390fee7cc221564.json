{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\MeshTree\\\\frontend\\\\src\\\\GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\nimport circularLayout from 'graphology-layout/circular';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodes = [{\n  id: 'n1',\n  label: 'Ella Fitzgerald: 1917'\n}, {\n  id: 'n2',\n  label: 'Frank Sinatra: 1915'\n}, {\n  id: 'n3',\n  label: 'Billie Holiday: 1915'\n}, {\n  id: 'n4',\n  label: 'Louis Armstrong: 1901'\n}, {\n  id: 'n5',\n  label: 'Nina Simone: 1933'\n}, {\n  id: 'n6',\n  label: 'Nat King Cole: 1919'\n}, {\n  id: 'n7',\n  label: 'Gregory Porter: 1971'\n}, {\n  id: 'n8',\n  label: 'Sarah Vaughan: 1924'\n}, {\n  id: 'n9',\n  label: 'Michael Bublé: 1975'\n}];\nconst edges = [{\n  source: 'n1',\n  target: 'n2'\n}, {\n  source: 'n1',\n  target: 'n3'\n}, {\n  source: 'n1',\n  target: 'n4'\n}, {\n  source: 'n1',\n  target: 'n5'\n}, {\n  source: 'n1',\n  target: 'n6'\n}, {\n  source: 'n1',\n  target: 'n7'\n}, {\n  source: 'n1',\n  target: 'n8'\n}, {\n  source: 'n1',\n  target: 'n7'\n}];\nconst GraphComponent = () => {\n  _s();\n  const sigma = useSigma();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph();\n    // Add nodes\n    nodes.forEach(node => {\n      graph.addNode(node.id, {\n        label: node.label,\n        size: 20,\n        color: 'black'\n      });\n    });\n\n    // Add edges - GROUPED / LINKED DECADES\n    edges.forEach(edge => {\n      graph.addEdge(edge.source, edge.target);\n    });\n\n    // Apply a circular layout\n    circularLayout.assign(graph);\n    if (sigma) {\n      sigma.setGraph(graph);\n      sigma.refresh();\n    }\n  }, [sigma]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 8\n  }, this);\n};\n_s(GraphComponent, \"R0bJCO5eGdK7ZLFJaGp7Ix0qrBw=\", false, function () {\n  return [useSigma];\n});\n_c = GraphComponent;\nconst GraphWrapper = () => /*#__PURE__*/_jsxDEV(SigmaContainer, {\n  children: /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 1\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 1\n}, this);\n_c2 = GraphWrapper;\nexport default GraphWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphComponent\");\n$RefreshReg$(_c2, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","useRef","SigmaContainer","useSigma","Graph","circularLayout","jsxDEV","_jsxDEV","nodes","id","label","edges","source","target","GraphComponent","_s","sigma","containerRef","graph","forEach","node","addNode","size","color","edge","addEdge","assign","setGraph","refresh","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","GraphWrapper","children","_c2","$RefreshReg$"],"sources":["D:/code/MeshTree/frontend/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\r\nimport Graph from 'graphology';\r\nimport circularLayout from 'graphology-layout/circular';\r\n\r\n\r\nconst nodes = [\r\n{ id: 'n1', label: 'Ella Fitzgerald: 1917'},\r\n{ id: 'n2', label: 'Frank Sinatra: 1915'},\r\n{ id: 'n3', label: 'Billie Holiday: 1915'},\r\n{ id: 'n4', label: 'Louis Armstrong: 1901'},\r\n{ id: 'n5', label: 'Nina Simone: 1933'},\r\n{ id: 'n6', label: 'Nat King Cole: 1919'},\r\n{ id: 'n7', label: 'Gregory Porter: 1971'},\r\n{ id: 'n8', label: 'Sarah Vaughan: 1924'},\r\n{ id: 'n9', label: 'Michael Bublé: 1975'}\r\n];\r\n\r\nconst edges = [\r\n{ source: 'n1', target: 'n2' },\r\n{ source: 'n1', target: 'n3' },\r\n{ source: 'n1', target: 'n4' },\r\n{ source: 'n1', target: 'n5' },\r\n{ source: 'n1', target: 'n6' },\r\n{ source: 'n1', target: 'n7' },\r\n{ source: 'n1', target: 'n8' },\r\n{ source: 'n1', target: 'n7' }\r\n];\r\n\r\nconst GraphComponent = () => {\r\nconst sigma = useSigma();\r\nconst containerRef = useRef(null);\r\n\r\nuseEffect(() => {\r\n    const graph = new Graph();\r\n    // Add nodes\r\n    nodes.forEach(node => {\r\n      graph.addNode(node.id, {\r\n        label: node.label,\r\n        size: 20,\r\n        color: 'black'\r\n      });\r\n    });\r\n\r\n    // Add edges - GROUPED / LINKED DECADES\r\n    edges.forEach(edge => {\r\n      graph.addEdge(edge.source, edge.target);\r\n    });\r\n\r\n// Apply a circular layout\r\ncircularLayout.assign(graph);\r\nif (sigma) {\r\n    sigma.setGraph(graph);\r\n    sigma.refresh();\r\n  }\r\n}, [sigma]);\r\n\r\nreturn <div ref={containerRef}  />;\r\n};\r\n\r\nconst GraphWrapper = () => (\r\n<SigmaContainer>\r\n<GraphComponent />\r\n</SigmaContainer>\r\n);\r\n\r\nexport default GraphWrapper;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}