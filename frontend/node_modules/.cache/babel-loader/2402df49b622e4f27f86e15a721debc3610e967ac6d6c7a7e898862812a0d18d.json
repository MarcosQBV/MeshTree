{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\MeshTree\\\\frontend\\\\src\\\\GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\n\n// CSS for fade-in effect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fadeInStyle = `\n  .fade-in {\n    opacity: 0;\n    animation: fadeIn 1s forwards;\n  }\n\n  @keyframes fadeIn {\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\n// Inject the CSS into the document\nconst styleSheet = document.createElement(\"style\");\nstyleSheet.type = \"text/css\";\nstyleSheet.innerText = fadeInStyle;\ndocument.head.appendChild(styleSheet);\nasync function fetchDataForKey(key) {\n  const baseUrl = 'http://localhost:5000';\n  const url = `${baseUrl}/get/${key}`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}\nfunction defineEdges(data, centralNodeId) {\n  const edges = [];\n  data.children.forEach(child => {\n    edges.push({\n      source: child.id,\n      target: centralNodeId\n    });\n  });\n  data.parents.forEach(parent => {\n    edges.push({\n      source: centralNodeId,\n      target: parent.id\n    });\n  });\n  return edges;\n}\nconst GraphComponent = () => {\n  _s();\n  const sigma = useSigma();\n  const graphRef = useRef(new Graph()); // Persist graph instance across renders\n  const [centralNode, setCentralNode] = useState({\n    id: 'Root',\n    label: 'Root'\n  });\n  const [parentNodes, setParentNodes] = useState([]);\n  const [childNodes, setChildNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  // Get label by node ID\n  function getNodeLabelById(nodeId, nodes) {\n    const node = nodes.find(node => node.id === nodeId);\n    return node ? node.label : null;\n  }\n\n  // Handle node clicks\n  const handleNodeClick = nodeId => {\n    const newLabel = getNodeLabelById(nodeId, [...parentNodes, ...childNodes]);\n    setCentralNode({\n      id: nodeId,\n      label: newLabel\n    });\n  };\n\n  // Add nodes and edges with a delay\n  async function addNodesAndEdgesWithDelay(nodes, edges) {\n    for (const node of nodes) {\n      if (!graphRef.current.hasNode(node.id)) {\n        graphRef.current.addNode(node.id, {\n          label: node.label,\n          size: 20,\n          color: 'black',\n          className: 'fade-in',\n          // Apply fade-in\n          x: Math.random() * 100 - 50,\n          // Random position within a range\n          y: Math.random() * 100 - 50\n        });\n      }\n\n      // Add related edges\n      edges.forEach(edge => {\n        if ((edge.source === node.id || edge.target === node.id) && !graphRef.current.hasEdge(edge.source, edge.target)) {\n          try {\n            graphRef.current.addEdge(edge.source, edge.target);\n          } catch (error) {\n            console.warn(`Failed to add edge from ${edge.source} to ${edge.target}:`, error);\n          }\n        }\n      });\n      await sleep(100); // Optional delay for smoother effect\n    }\n  }\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  // Fetch data when central node changes\n  useEffect(() => {\n    if (!centralNode.id) return;\n    fetchDataForKey(centralNode.id).then(data => {\n      const parents = data.parents.map(({\n        id,\n        label\n      }) => ({\n        id,\n        label\n      }));\n      const children = data.children.map(({\n        id,\n        label\n      }) => ({\n        id,\n        label\n      }));\n      setParentNodes(parents);\n      setChildNodes(children);\n      setEdges(defineEdges(data, centralNode.id));\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, [centralNode.id]);\n\n  // Update graph visualization\n  useEffect(() => {\n    // Clear previous graph state before re-rendering\n    graphRef.current.clear();\n\n    // Add central node\n    if (!graphRef.current.hasNode(centralNode.id)) {\n      graphRef.current.addNode(centralNode.id, {\n        label: centralNode.label,\n        size: 20,\n        color: 'black',\n        x: 0,\n        y: 0\n      });\n    }\n\n    // Combine parent and child nodes for unified addition\n    const allNodes = [...parentNodes, ...childNodes];\n    addNodesAndEdgesWithDelay(allNodes, edges);\n\n    // Remove all previous click handlers and set a new one\n    sigma.removeAllListeners('clickNode');\n    sigma.on('clickNode', event => {\n      handleNodeClick(event.node);\n    });\n\n    // Update sigma with the modified graph\n    sigma.setGraph(graphRef.current);\n    sigma.refresh();\n\n    // Cleanup function to remove listeners on unmount\n    return () => {\n      sigma.removeAllListeners('clickNode');\n    };\n  }, [sigma, parentNodes, childNodes, edges, centralNode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 10\n  }, this);\n};\n_s(GraphComponent, \"4/Jq75VaMRcR2haNygRmpT0TvOU=\", false, function () {\n  return [useSigma];\n});\n_c = GraphComponent;\nconst GraphWrapper = () => /*#__PURE__*/_jsxDEV(SigmaContainer, {\n  children: /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 163,\n  columnNumber: 3\n}, this);\n_c2 = GraphWrapper;\nexport default GraphWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphComponent\");\n$RefreshReg$(_c2, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","useRef","useState","SigmaContainer","useSigma","Graph","jsxDEV","_jsxDEV","fadeInStyle","styleSheet","document","createElement","type","innerText","head","appendChild","fetchDataForKey","key","baseUrl","url","response","fetch","ok","Error","status","data","json","error","console","defineEdges","centralNodeId","edges","children","forEach","child","push","source","id","target","parents","parent","GraphComponent","_s","sigma","graphRef","centralNode","setCentralNode","label","parentNodes","setParentNodes","childNodes","setChildNodes","setEdges","getNodeLabelById","nodeId","nodes","node","find","handleNodeClick","newLabel","addNodesAndEdgesWithDelay","current","hasNode","addNode","size","color","className","x","Math","random","y","edge","hasEdge","addEdge","warn","sleep","ms","Promise","resolve","setTimeout","then","map","catch","clear","allNodes","removeAllListeners","on","event","setGraph","refresh","fileName","_jsxFileName","lineNumber","columnNumber","_c","GraphWrapper","_c2","$RefreshReg$"],"sources":["D:/code/MeshTree/frontend/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\r\nimport Graph from 'graphology';\r\n\r\n// CSS for fade-in effect\r\nconst fadeInStyle = `\r\n  .fade-in {\r\n    opacity: 0;\r\n    animation: fadeIn 1s forwards;\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\n// Inject the CSS into the document\r\nconst styleSheet = document.createElement(\"style\");\r\nstyleSheet.type = \"text/css\";\r\nstyleSheet.innerText = fadeInStyle;\r\ndocument.head.appendChild(styleSheet);\r\n\r\nasync function fetchDataForKey(key) {\r\n  const baseUrl = 'http://localhost:5000';\r\n  const url = `${baseUrl}/get/${key}`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction defineEdges(data, centralNodeId) {\r\n  const edges = [];\r\n  data.children.forEach((child) => {\r\n    edges.push({ source: child.id, target: centralNodeId });\r\n  });\r\n  data.parents.forEach((parent) => {\r\n    edges.push({ source: centralNodeId, target: parent.id });\r\n  });\r\n  return edges;\r\n}\r\n\r\nconst GraphComponent = () => {\r\n  const sigma = useSigma();\r\n  const graphRef = useRef(new Graph()); // Persist graph instance across renders\r\n  const [centralNode, setCentralNode] = useState({ id: 'Root', label: 'Root' });\r\n  const [parentNodes, setParentNodes] = useState([]);\r\n  const [childNodes, setChildNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n\r\n  // Get label by node ID\r\n  function getNodeLabelById(nodeId, nodes) {\r\n    const node = nodes.find((node) => node.id === nodeId);\r\n    return node ? node.label : null;\r\n  }\r\n\r\n  // Handle node clicks\r\n  const handleNodeClick = (nodeId) => {\r\n    const newLabel = getNodeLabelById(nodeId, [...parentNodes, ...childNodes]);\r\n    setCentralNode({ id: nodeId, label: newLabel });\r\n  };\r\n\r\n  // Add nodes and edges with a delay\r\n  async function addNodesAndEdgesWithDelay(nodes, edges) {\r\n    for (const node of nodes) {\r\n      if (!graphRef.current.hasNode(node.id)) {\r\n        graphRef.current.addNode(node.id, {\r\n          label: node.label,\r\n          size: 20,\r\n          color: 'black',\r\n          className: 'fade-in', // Apply fade-in\r\n          x: Math.random() * 100 - 50, // Random position within a range\r\n          y: Math.random() * 100 - 50\r\n        });\r\n      }\r\n\r\n      // Add related edges\r\n      edges.forEach((edge) => {\r\n        if ((edge.source === node.id || edge.target === node.id) && !graphRef.current.hasEdge(edge.source, edge.target)) {\r\n          try {\r\n            graphRef.current.addEdge(edge.source, edge.target);\r\n          } catch (error) {\r\n            console.warn(`Failed to add edge from ${edge.source} to ${edge.target}:`, error);\r\n          }\r\n        }\r\n      });\r\n      await sleep(100); // Optional delay for smoother effect\r\n    }\r\n  }\r\n\r\n  function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  // Fetch data when central node changes\r\n  useEffect(() => {\r\n    if (!centralNode.id) return;\r\n\r\n    fetchDataForKey(centralNode.id)\r\n      .then((data) => {\r\n        const parents = data.parents.map(({ id, label }) => ({ id, label }));\r\n        const children = data.children.map(({ id, label }) => ({ id, label }));\r\n\r\n        setParentNodes(parents);\r\n        setChildNodes(children);\r\n        setEdges(defineEdges(data, centralNode.id));\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }, [centralNode.id]);\r\n\r\n  // Update graph visualization\r\n  useEffect(() => {\r\n    // Clear previous graph state before re-rendering\r\n    graphRef.current.clear();\r\n\r\n    // Add central node\r\n    if (!graphRef.current.hasNode(centralNode.id)) {\r\n      graphRef.current.addNode(centralNode.id, {\r\n        label: centralNode.label,\r\n        size: 20,\r\n        color: 'black',\r\n        x: 0,\r\n        y: 0\r\n      });\r\n    }\r\n\r\n    // Combine parent and child nodes for unified addition\r\n    const allNodes = [...parentNodes, ...childNodes];\r\n    addNodesAndEdgesWithDelay(allNodes, edges);\r\n\r\n    // Remove all previous click handlers and set a new one\r\n    sigma.removeAllListeners('clickNode');\r\n    sigma.on('clickNode', (event) => {\r\n      handleNodeClick(event.node);\r\n    });\r\n\r\n    // Update sigma with the modified graph\r\n    sigma.setGraph(graphRef.current);\r\n    sigma.refresh();\r\n\r\n    // Cleanup function to remove listeners on unmount\r\n    return () => {\r\n      sigma.removeAllListeners('clickNode');\r\n    };\r\n  }, [sigma, parentNodes, childNodes, edges, centralNode]);\r\n\r\n  return <div />;\r\n};\r\n\r\nconst GraphWrapper = () => (\r\n  <SigmaContainer>\r\n    <GraphComponent />\r\n  </SigmaContainer>\r\n);\r\n\r\nexport default GraphWrapper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}