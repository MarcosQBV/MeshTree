{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\MeshTree\\\\frontend\\\\src\\\\GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodes = [{\n  id: 'n1',\n  label: 'Ella Fitzgerald: 1917'\n}, {\n  id: 'n2',\n  label: 'Frank Sinatra: 1915'\n}, {\n  id: 'n3',\n  label: 'Billie Holiday: 1915'\n}, {\n  id: 'n4',\n  label: 'Louis Armstrong: 1901'\n}, {\n  id: 'n5',\n  label: 'Nina Simone: 1933'\n}, {\n  id: 'n6',\n  label: 'Nat King Cole: 1919'\n}, {\n  id: 'n7',\n  label: 'Gregory Porter: 1971'\n}, {\n  id: 'n8',\n  label: 'Sarah Vaughan: 1924'\n}, {\n  id: 'n9',\n  label: 'Michael Bublé: 1975'\n}];\nconst edges = [{\n  source: 'n1',\n  target: 'n1'\n}, {\n  source: 'n1',\n  target: 'n1'\n}, {\n  source: 'n1',\n  target: 'n1'\n}, {\n  source: 'n2',\n  target: 'n1'\n}, {\n  source: 'n3',\n  target: 'n1'\n}, {\n  source: 'n5',\n  target: 'n8'\n}, {\n  source: 'n7',\n  target: 'n9'\n}];\nconst GraphComponent = () => {\n  _s();\n  const sigma = useSigma();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph();\n\n    // Add nodes\n    nodes.forEach(node => {\n      graph.addNode(node.id, {\n        label: node.label,\n        size: 20,\n        color: 'black'\n      });\n    });\n\n    // Add edges\n    edges.forEach(edge => {\n      graph.addEdge(edge.source, edge.target);\n    });\n\n    // Central node\n    const centerNode = 'n1';\n    const centerX = 0;\n    const centerY = 0;\n    graph.setNodeAttribute(centerNode, 'x', centerX);\n    graph.setNodeAttribute(centerNode, 'y', centerY);\n\n    // Parent nodes (behind n1)\n    const parentNodes = ['n2', 'n3', 'n4', 'n5'];\n    const parentAngleSpread = Math.PI; // 180 degrees for parent nodes\n    const parentRadius = 150; // Distance from the central node\n    const parentStartAngle = Math.PI; // Start angle (180 degrees)\n\n    parentNodes.forEach((nodeId, index) => {\n      const angle = parentStartAngle + index * parentAngleSpread / (parentNodes.length - 1);\n      const x = centerX + parentRadius * Math.cos(angle);\n      const y = centerY + parentRadius * Math.sin(angle);\n      graph.setNodeAttribute(nodeId, 'x', x);\n      graph.setNodeAttribute(nodeId, 'y', y);\n    });\n\n    // Child nodes (in front of n1)\n    const childNodes = ['n6', 'n7', 'n8', 'n9'];\n    const childAngleSpread = Math.PI / 2; // 90 degrees for child nodes\n    const childRadius = 100; // Distance from the central node\n    const childStartAngle = Math.PI / -4; // Start angle (-45 degrees)\n\n    childNodes.forEach((nodeId, index) => {\n      const angle = childStartAngle + index * childAngleSpread / (childNodes.length - 1);\n      const x = centerX + childRadius * Math.cos(angle);\n      const y = centerY + childRadius * Math.sin(angle);\n      graph.setNodeAttribute(nodeId, 'x', x);\n      graph.setNodeAttribute(nodeId, 'y', y);\n    });\n    if (sigma) {\n      sigma.setGraph(graph);\n      sigma.refresh();\n    }\n  }, [sigma]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n};\n_s(GraphComponent, \"R0bJCO5eGdK7ZLFJaGp7Ix0qrBw=\", false, function () {\n  return [useSigma];\n});\n_c = GraphComponent;\nconst GraphWrapper = () => /*#__PURE__*/_jsxDEV(SigmaContainer, {\n  children: /*#__PURE__*/_jsxDEV(GraphComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 93,\n  columnNumber: 3\n}, this);\n_c2 = GraphWrapper;\nexport default GraphWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphComponent\");\n$RefreshReg$(_c2, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","useRef","SigmaContainer","useSigma","Graph","jsxDEV","_jsxDEV","nodes","id","label","edges","source","target","GraphComponent","_s","sigma","containerRef","graph","forEach","node","addNode","size","color","edge","addEdge","centerNode","centerX","centerY","setNodeAttribute","parentNodes","parentAngleSpread","Math","PI","parentRadius","parentStartAngle","nodeId","index","angle","length","x","cos","y","sin","childNodes","childAngleSpread","childRadius","childStartAngle","setGraph","refresh","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","GraphWrapper","children","_c2","$RefreshReg$"],"sources":["D:/code/MeshTree/frontend/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\r\nimport Graph from 'graphology';\r\n\r\nconst nodes = [\r\n  { id: 'n1', label: 'Ella Fitzgerald: 1917' },\r\n  { id: 'n2', label: 'Frank Sinatra: 1915' },\r\n  { id: 'n3', label: 'Billie Holiday: 1915' },\r\n  { id: 'n4', label: 'Louis Armstrong: 1901' },\r\n  { id: 'n5', label: 'Nina Simone: 1933' },\r\n  { id: 'n6', label: 'Nat King Cole: 1919' },\r\n  { id: 'n7', label: 'Gregory Porter: 1971' },\r\n  { id: 'n8', label: 'Sarah Vaughan: 1924' },\r\n  { id: 'n9', label: 'Michael Bublé: 1975' }\r\n];\r\n\r\nconst edges = [\r\n  { source: 'n1', target: 'n1' },\r\n  { source: 'n1', target: 'n1' },\r\n  { source: 'n1', target: 'n1' },\r\n  { source: 'n2', target: 'n1' },\r\n  { source: 'n3', target: 'n1' },\r\n  { source: 'n5', target: 'n8' },\r\n  { source: 'n7', target: 'n9' }\r\n];\r\n\r\nconst GraphComponent = () => {\r\n  const sigma = useSigma();\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const graph = new Graph();\r\n    \r\n    // Add nodes\r\n    nodes.forEach(node => {\r\n      graph.addNode(node.id, {\r\n        label: node.label,\r\n        size: 20,\r\n        color: 'black'\r\n      });\r\n    });\r\n\r\n    // Add edges\r\n    edges.forEach(edge => {\r\n      graph.addEdge(edge.source, edge.target);\r\n    });\r\n\r\n    // Central node\r\n    const centerNode = 'n1';\r\n    const centerX = 0;\r\n    const centerY = 0;\r\n    graph.setNodeAttribute(centerNode, 'x', centerX);\r\n    graph.setNodeAttribute(centerNode, 'y', centerY);\r\n\r\n    // Parent nodes (behind n1)\r\n    const parentNodes = ['n2', 'n3', 'n4', 'n5'];\r\n    const parentAngleSpread = Math.PI; // 180 degrees for parent nodes\r\n    const parentRadius = 150; // Distance from the central node\r\n    const parentStartAngle = Math.PI; // Start angle (180 degrees)\r\n\r\n    parentNodes.forEach((nodeId, index) => {\r\n      const angle = parentStartAngle + (index * parentAngleSpread) / (parentNodes.length - 1);\r\n      const x = centerX + parentRadius * Math.cos(angle);\r\n      const y = centerY + parentRadius * Math.sin(angle);\r\n      graph.setNodeAttribute(nodeId, 'x', x);\r\n      graph.setNodeAttribute(nodeId, 'y', y);\r\n    });\r\n\r\n    // Child nodes (in front of n1)\r\n    const childNodes = ['n6', 'n7', 'n8', 'n9'];\r\n    const childAngleSpread = Math.PI / 2; // 90 degrees for child nodes\r\n    const childRadius = 100; // Distance from the central node\r\n    const childStartAngle = Math.PI / -4; // Start angle (-45 degrees)\r\n\r\n    childNodes.forEach((nodeId, index) => {\r\n      const angle = childStartAngle + (index * childAngleSpread) / (childNodes.length - 1);\r\n      const x = centerX + childRadius * Math.cos(angle);\r\n      const y = centerY + childRadius * Math.sin(angle);\r\n      graph.setNodeAttribute(nodeId, 'x', x);\r\n      graph.setNodeAttribute(nodeId, 'y', y);\r\n    });\r\n\r\n    if (sigma) {\r\n      sigma.setGraph(graph);\r\n      sigma.refresh();\r\n    }\r\n  }, [sigma]);\r\n\r\n  return <div ref={containerRef} />;\r\n};\r\n\r\nconst GraphWrapper = () => (\r\n  <SigmaContainer>\r\n    <GraphComponent />\r\n  </SigmaContainer>\r\n);\r\n\r\nexport default GraphWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}