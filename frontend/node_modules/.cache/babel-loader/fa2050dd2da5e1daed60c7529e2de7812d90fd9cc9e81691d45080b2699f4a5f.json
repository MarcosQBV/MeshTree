{"ast":null,"code":"import * as e from \"react\";\nimport t, { createContext as n, useContext as r, useCallback as a, useState as c, useEffect as l, forwardRef as o, useRef as s, useImperativeHandle as i, useMemo as u } from \"react\";\nimport d from \"graphology\";\nimport { Sigma as g } from \"sigma\";\nconst m = n(null),\n  h = m.Provider;\nfunction f() {\n  const e = r(m);\n  if (null == e) throw new Error(\"No context provided: useSigmaContext() can only be used in a descendant of <SigmaContainer>\");\n  return e;\n}\nfunction v() {\n  return f().sigma;\n}\nfunction p() {\n  const {\n    sigma: e\n  } = f();\n  return a(t => {\n    e && Object.keys(t).forEach(n => {\n      e.setSetting(n, t[n]);\n    });\n  }, [e]);\n}\nfunction b(e) {\n  return new Set(Object.keys(e));\n}\nconst w = b({\n    clickNode: !0,\n    rightClickNode: !0,\n    downNode: !0,\n    enterNode: !0,\n    leaveNode: !0,\n    doubleClickNode: !0,\n    wheelNode: !0,\n    clickEdge: !0,\n    rightClickEdge: !0,\n    downEdge: !0,\n    enterEdge: !0,\n    leaveEdge: !0,\n    doubleClickEdge: !0,\n    wheelEdge: !0,\n    clickStage: !0,\n    rightClickStage: !0,\n    downStage: !0,\n    doubleClickStage: !0,\n    wheelStage: !0,\n    beforeRender: !0,\n    afterRender: !0,\n    kill: !0,\n    upStage: !0,\n    upEdge: !0,\n    upNode: !0,\n    enterStage: !0,\n    leaveStage: !0,\n    resize: !0,\n    afterClear: !0,\n    afterProcess: !0,\n    beforeClear: !0,\n    beforeProcess: !0\n  }),\n  E = b({\n    click: !0,\n    rightClick: !0,\n    doubleClick: !0,\n    mouseup: !0,\n    mousedown: !0,\n    mousemove: !0,\n    mousemovebody: !0,\n    mouseleave: !0,\n    mouseenter: !0,\n    wheel: !0\n  }),\n  O = b({\n    touchup: !0,\n    touchdown: !0,\n    touchmove: !0\n  }),\n  y = b({\n    updated: !0\n  });\nfunction _() {\n  const e = v(),\n    t = p(),\n    [n, r] = c({});\n  return l(() => {\n    if (!e || !n) return;\n    const t = n,\n      r = Object.keys(t);\n    return r.forEach(n => {\n      const r = t[n];\n      w.has(n) && e.on(n, r), E.has(n) && e.getMouseCaptor().on(n, r), O.has(n) && e.getTouchCaptor().on(n, r), y.has(n) && e.getCamera().on(n, r);\n    }), () => {\n      e && r.forEach(n => {\n        const r = t[n];\n        w.has(n) && e.off(n, r), E.has(n) && e.getMouseCaptor().off(n, r), O.has(n) && e.getTouchCaptor().off(n, r), y.has(n) && e.getCamera().off(n, r);\n      });\n    };\n  }, [e, n, t]), r;\n}\nfunction j() {\n  const e = v();\n  return a((t, n = !0) => {\n    e && t && (n && e.getGraph().order > 0 && e.getGraph().clear(), e.getGraph().import(t), e.refresh());\n  }, [e]);\n}\nfunction C() {\n  return Math.random().toString(36).slice(2);\n}\nfunction N(e, t) {\n  if (e === t) return !0;\n  if (\"object\" == typeof e && null != e && \"object\" == typeof t && null != t) {\n    if (Object.keys(e).length != Object.keys(t).length) return !1;\n    for (const n in e) {\n      if (!Object.hasOwn(t, n)) return !1;\n      if (!N(e[n], t[n])) return !1;\n    }\n    return !0;\n  }\n  return !1;\n}\nfunction x(e) {\n  const t = v(),\n    [n, r] = c(e || {});\n  l(() => {\n    N(n, e || {}) || r(e || {});\n  }, [e]);\n  const o = a(e => {\n      t.getCamera().animatedZoom(Object.assign(Object.assign({}, n), e));\n    }, [t, n]),\n    s = a(e => {\n      t.getCamera().animatedUnzoom(Object.assign(Object.assign({}, n), e));\n    }, [t, n]),\n    i = a(e => {\n      t.getCamera().animatedReset(Object.assign(Object.assign({}, n), e));\n    }, [t, n]),\n    u = a((e, r) => {\n      t.getCamera().animate(e, Object.assign(Object.assign({}, n), r));\n    }, [t, n]),\n    d = a((e, r) => {\n      const a = t.getNodeDisplayData(e);\n      a ? t.getCamera().animate(a, Object.assign(Object.assign({}, n), r)) : console.log(`Node ${e} not found`);\n    }, [t, n]);\n  return {\n    zoomIn: o,\n    zoomOut: s,\n    reset: i,\n    goto: u,\n    gotoNode: d\n  };\n}\nfunction k(e) {\n  const t = f(),\n    [n, r] = c(!1),\n    [o, s] = c(e || t.container),\n    i = () => r(e => !e);\n  l(() => (document.addEventListener(\"fullscreenchange\", i), () => document.removeEventListener(\"fullscreenchange\", i)), [i]), l(() => {\n    s(e || t.container);\n  }, [e, t.container]);\n  return {\n    toggle: a(() => {\n      var e;\n      e = o, document.fullscreenElement !== e ? e.requestFullscreen() : document.exitFullscreen && document.exitFullscreen();\n    }, [o]),\n    isFullScreen: n\n  };\n}\nconst S = o(({\n  graph: e,\n  id: n,\n  className: r,\n  style: a,\n  settings: o = {},\n  children: m\n}, f) => {\n  const v = s(null),\n    p = s(null),\n    b = {\n      className: `react-sigma ${r || \"\"}`,\n      id: n,\n      style: a\n    },\n    [w, E] = c(null),\n    [O, y] = c(o);\n  l(() => {\n    N(O, o) || y(o);\n  }, [o]), l(() => {\n    let t = null;\n    if (null !== p.current) {\n      let n = new d();\n      e && (n = \"function\" == typeof e ? new e() : e), t = new g(n, p.current, O), w && t.getCamera().setState(w.getCamera().getState());\n    }\n    return E(t), () => {\n      t && t.kill(), E(null);\n    };\n  }, [p, e, O]), i(f, () => w, [w]);\n  const _ = u(() => w && v.current ? {\n      sigma: w,\n      container: v.current\n    } : null, [w, v.current]),\n    j = null !== _ ? t.createElement(h, {\n      value: _\n    }, m) : null;\n  return t.createElement(\"div\", Object.assign({}, b, {\n    ref: v\n  }), t.createElement(\"div\", {\n    className: \"sigma-container\",\n    ref: p\n  }), j);\n});\nconst H = ({\n  id: e,\n  className: n,\n  style: r,\n  children: a,\n  position: c = \"bottom-left\"\n}) => {\n  const l = {\n    className: `react-sigma-controls ${n || \"\"} ${c}`,\n    id: e,\n    style: r\n  };\n  return t.createElement(\"div\", Object.assign({}, l), a);\n};\nvar M;\nfunction $() {\n  return $ = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, $.apply(this, arguments);\n}\nvar z,\n  P = function (t) {\n    return e.createElement(\"svg\", $({\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"aria-hidden\": \"true\",\n      className: \"plus-solid_svg__svg-inline--fa plus-solid_svg__fa-plus plus-solid_svg__fa-w-14\",\n      \"data-icon\": \"plus\",\n      \"data-prefix\": \"fas\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), M || (M = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32\"\n    })));\n  };\nfunction V() {\n  return V = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, V.apply(this, arguments);\n}\nvar F,\n  G = function (t) {\n    return e.createElement(\"svg\", V({\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"aria-hidden\": \"true\",\n      className: \"minus-solid_svg__svg-inline--fa minus-solid_svg__fa-minus minus-solid_svg__fa-w-14\",\n      \"data-icon\": \"minus\",\n      \"data-prefix\": \"fas\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), z || (z = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32\"\n    })));\n  };\nfunction B() {\n  return B = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, B.apply(this, arguments);\n}\nvar I = function (t) {\n  return e.createElement(\"svg\", B({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    className: \"dot-circle-regular_svg__svg-inline--fa dot-circle-regular_svg__fa-dot-circle dot-circle-regular_svg__fa-w-16\",\n    \"data-icon\": \"dot-circle\",\n    \"data-prefix\": \"far\",\n    viewBox: \"0 0 512 512\",\n    width: \"1em\",\n    height: \"1em\"\n  }, t), F || (F = e.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8m0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80\"\n  })));\n};\nconst L = ({\n  className: e,\n  style: n,\n  animationDuration: r = 200,\n  children: a,\n  labels: c = {}\n}) => {\n  const {\n      zoomIn: l,\n      zoomOut: o,\n      reset: s\n    } = x({\n      duration: r,\n      factor: 1.5\n    }),\n    i = {\n      style: n,\n      className: `react-sigma-control ${e || \"\"}`\n    };\n  return t.createElement(t.Fragment, null, t.createElement(\"div\", Object.assign({}, i), t.createElement(\"button\", {\n    onClick: () => l(),\n    title: c.zoomIn || \"Zoom In\"\n  }, a ? a[0] : t.createElement(P, {\n    style: {\n      width: \"1em\"\n    }\n  }))), t.createElement(\"div\", Object.assign({}, i), t.createElement(\"button\", {\n    onClick: () => o(),\n    title: c.zoomOut || \"Zoom Out\"\n  }, a ? a[1] : t.createElement(G, {\n    style: {\n      width: \"1em\"\n    }\n  }))), t.createElement(\"div\", Object.assign({}, i), t.createElement(\"button\", {\n    onClick: () => s(),\n    title: c.reset || \"See whole graph\"\n  }, a ? a[2] : t.createElement(I, {\n    style: {\n      width: \"1em\"\n    }\n  }))));\n};\nvar D;\nfunction R() {\n  return R = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, R.apply(this, arguments);\n}\nvar Z,\n  A = function (t) {\n    return e.createElement(\"svg\", R({\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"aria-hidden\": \"true\",\n      className: \"expand-solid_svg__svg-inline--fa expand-solid_svg__fa-expand expand-solid_svg__fa-w-14\",\n      \"data-icon\": \"expand\",\n      \"data-prefix\": \"fas\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), D || (D = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12M288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12m148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12M160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12\"\n    })));\n  };\nfunction T() {\n  return T = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, T.apply(this, arguments);\n}\nvar q = function (t) {\n  return e.createElement(\"svg\", T({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    className: \"compress-solid_svg__svg-inline--fa compress-solid_svg__fa-compress compress-solid_svg__fa-w-14\",\n    \"data-icon\": \"compress\",\n    \"data-prefix\": \"fas\",\n    viewBox: \"0 0 448 512\",\n    width: \"1em\",\n    height: \"1em\"\n  }, t), Z || (Z = e.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12m-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24m0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12m192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12\"\n  })));\n};\nconst U = ({\n    id: e,\n    className: n,\n    style: r,\n    container: a,\n    children: c,\n    labels: l = {}\n  }) => {\n    const {\n        isFullScreen: o,\n        toggle: s\n      } = k(null == a ? void 0 : a.current),\n      i = {\n        className: `react-sigma-control ${n || \"\"}`,\n        id: e,\n        style: r\n      };\n    return document.fullscreenEnabled ? t.createElement(\"div\", Object.assign({}, i), t.createElement(\"button\", {\n      onClick: s,\n      title: o ? l.exit || \"Exit fullscreen\" : l.enter || \"Enter fullscreen\"\n    }, c && !o && c[0], c && o && c[1], !c && !o && t.createElement(A, {\n      style: {\n        width: \"1em\"\n      }\n    }), !c && o && t.createElement(q, {\n      style: {\n        width: \"1em\"\n      }\n    }))) : null;\n  },\n  J = ({\n    id: e,\n    className: n,\n    style: r,\n    labels: a = {}\n  }) => {\n    const o = v(),\n      s = _(),\n      {\n        gotoNode: i\n      } = x(),\n      [u, d] = c(\"\"),\n      [g, m] = c([]),\n      [h, f] = c(null),\n      [p, b] = c(\"\");\n    l(() => {\n      b(`search-${C()}`);\n    }, []), l(() => {\n      const e = [];\n      !h && u.length > 1 && o.getGraph().forEachNode((t, n) => {\n        n.label && n.label.toLowerCase().includes(u.toLowerCase()) && e.push({\n          id: t,\n          label: n.label\n        });\n      }), m(e);\n    }, [u]), l(() => {\n      s({\n        clickStage: () => {\n          f(null), d(\"\");\n        }\n      });\n    }, [s]), l(() => {\n      if (h) return o.getGraph().setNodeAttribute(h, \"highlighted\", !0), i(h), () => {\n        o.getGraph().setNodeAttribute(h, \"highlighted\", !1);\n      };\n    }, [h]);\n    const w = {\n      className: `react-sigma-search ${n || \"\"}`,\n      id: e,\n      style: r\n    };\n    return t.createElement(\"div\", Object.assign({}, w), t.createElement(\"label\", {\n      htmlFor: p,\n      style: {\n        display: \"none\"\n      }\n    }, a.text || \"Search a node\"), t.createElement(\"input\", {\n      id: p,\n      type: \"text\",\n      placeholder: a.placeholder || \"Search...\",\n      list: `${p}-datalist`,\n      value: u,\n      onChange: e => {\n        const t = e.target.value,\n          n = g.find(e => e.label === t);\n        n ? (d(n.label), m([]), f(n.id)) : (f(null), d(t));\n      }\n    }), t.createElement(\"datalist\", {\n      id: `${p}-datalist`\n    }, g.map(e => t.createElement(\"option\", {\n      key: e.id,\n      value: e.label\n    }, e.label))));\n  };\nexport { H as ControlsContainer, U as FullScreenControl, J as SearchControl, S as SigmaContainer, m as SigmaContext, h as SigmaProvider, L as ZoomControl, C as getUniqueKey, N as isEqual, x as useCamera, k as useFullScreen, j as useLoadGraph, _ as useRegisterEvents, p as useSetSettings, v as useSigma, f as useSigmaContext };","map":{"version":3,"names":["m","n","h","Provider","f","e","r","Error","v","sigma","p","a","t","Object","keys","forEach","setSetting","b","Set","w","clickNode","rightClickNode","downNode","enterNode","leaveNode","doubleClickNode","wheelNode","clickEdge","rightClickEdge","downEdge","enterEdge","leaveEdge","doubleClickEdge","wheelEdge","clickStage","rightClickStage","downStage","doubleClickStage","wheelStage","beforeRender","afterRender","kill","upStage","upEdge","upNode","enterStage","leaveStage","resize","afterClear","afterProcess","beforeClear","beforeProcess","E","click","rightClick","doubleClick","mouseup","mousedown","mousemove","mousemovebody","mouseleave","mouseenter","wheel","O","touchup","touchdown","touchmove","y","updated","_","c","l","has","on","getMouseCaptor","getTouchCaptor","getCamera","off","j","getGraph","order","clear","import","refresh","C","Math","random","toString","slice","N","length","hasOwn","x","o","animatedZoom","assign","s","animatedUnzoom","i","animatedReset","u","animate","d","getNodeDisplayData","console","log","zoomIn","zoomOut","reset","goto","gotoNode","k","container","toggleState","document","addEventListener","removeEventListener","toggle","fullscreenElement","requestFullscreen","exitFullscreen","isFullScreen","S","graph","id","className","style","settings","children","current","g","setState","getState","createElement","value","ref","H","ControlsContainer","position","M","$","bind","arguments","prototype","hasOwnProperty","call","apply","z","P","SvgPlusSolid","xmlns","viewBox","width","height","fill","V","F","G","SvgMinusSolid","B","I","SvgDotCircleRegular","L","ZoomControl","animationDuration","labels","duration","factor","Fragment","onClick","title","D","R","Z","A","SvgExpandSolid","T","q","SvgCompressSolid","U","FullScreenControl","fullscreenEnabled","exit","enter","J","SearchControl","forEachNode","label","toLowerCase","includes","push","setNodeAttribute","htmlFor","display","text","type","placeholder","list","onChange","target","find","map","key","SigmaContainer","SigmaContext","SigmaProvider","getUniqueKey","isEqual","useCamera","useFullScreen","useLoadGraph","useRegisterEvents","useSetSettings","useSigma","useSigmaContext"],"sources":["D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\hooks\\context.ts","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\hooks\\useSigma.ts","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\hooks\\useSetSettings.ts","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\hooks\\useRegisterEvents.ts","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\hooks\\useLoadGraph.ts","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\utils.ts","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\hooks\\useCamera.ts","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\hooks\\useFullScreen.ts","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\components\\SigmaContainer.tsx","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\components\\controls\\ControlsContainer.tsx","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\assets\\icons\\plus-solid.svg","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\assets\\icons\\minus-solid.svg","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\assets\\icons\\dot-circle-regular.svg","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\components\\controls\\ZoomControl.tsx","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\assets\\icons\\expand-solid.svg","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\assets\\icons\\compress-solid.svg","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\components\\controls\\FullScreenControl.tsx","D:\\code\\JazzSigma\\node_modules\\@react-sigma\\core\\src\\components\\controls\\SearchControl.tsx"],"sourcesContent":["import { Attributes } from \"graphology-types\";\nimport { createContext, useContext } from \"react\";\nimport Sigma from \"sigma\";\n\nexport interface SigmaContextInterface<\n  N extends Attributes = Attributes,\n  E extends Attributes = Attributes,\n  G extends Attributes = Attributes,\n> {\n  sigma: Sigma<N, E, G>;\n  container: HTMLElement;\n}\n\n/**\n * @hidden\n */\nexport const SigmaContext = createContext<SigmaContextInterface | null>(null);\n\n/**\n * @hidden\n */\nexport const SigmaProvider = SigmaContext.Provider;\n\n/**\n * React hook that store the sigma and html container reference.\n *\n * ```typescript\n * const {sigma, container} = useSigmaContext();\n *```\n * See [[SigmaContextInterface]] for more information.\n *\n * @category Hook\n */\nexport function useSigmaContext<\n  N extends Attributes = Attributes,\n  E extends Attributes = Attributes,\n  G extends Attributes = Attributes,\n>(): SigmaContextInterface<N, E, G> {\n  const context = useContext(SigmaContext);\n  if (context == null) {\n    throw new Error(\"No context provided: useSigmaContext() can only be used in a descendant of <SigmaContainer>\");\n  }\n  // cast context to the one with good generics\n  return context as unknown as SigmaContextInterface<N, E, G>;\n}\n","import Sigma from \"sigma\";\n\nimport { useSigmaContext } from \"./context\";\nimport { Attributes } from \"graphology-types\";\n\n/**\n * React hook to retrieve the sigma instance (from the context).\n *\n * ```typescript\n * const sigma = useSigma();\n *```\n * @category Hook\n */\nexport function useSigma<\n  N extends Attributes = Attributes,\n  E extends Attributes = Attributes,\n  G extends Attributes = Attributes,\n>(): Sigma<N, E, G> {\n  return useSigmaContext<N, E, G>().sigma;\n}\n","import { useCallback } from \"react\";\nimport { Settings } from \"sigma/settings\";\n\nimport { useSigmaContext } from \"./context\";\nimport { Attributes } from \"graphology-types\";\n\n/**\n * React hook that helps you to update Sigma’s settings.\n *\n * ```typescript\n * const setSettings = useSetSettings();\n * ...\n * useEffect(() => {\n *  setSettings({\n *    hideEdgesOnMove: true,\n *    hideLabelsOnMove: true,\n *  });\n * }, []);\n *```\n * @category Hook\n */\nexport function useSetSettings<\n  N extends Attributes = Attributes,\n  E extends Attributes = Attributes,\n  G extends Attributes = Attributes,\n>(): (newSettings: Partial<Settings<N, E, G>>) => void {\n  const { sigma } = useSigmaContext<N, E, G>();\n\n  const setSettings = useCallback(\n    (newSettings: Partial<Settings<N, E, G>>) => {\n      if (!sigma) return;\n      (Object.keys(newSettings) as Array<keyof Settings<N, E, G>>).forEach((key) => {\n        // as never because of https://stackoverflow.com/questions/58656353/how-to-avoid-dynamic-keyof-object-assign-error-in-typescript\n        sigma.setSetting(key, newSettings[key] as never);\n      });\n    },\n    [sigma],\n  );\n\n  return setSettings;\n}\n","import { useEffect, useState } from \"react\";\nimport { SigmaEvents, TouchCaptorEvents, MouseCaptorEvents, CameraEvents } from \"sigma/types\";\n\nimport { useSigma } from \"./useSigma\";\nimport { useSetSettings } from \"./useSetSettings\";\nimport { EventHandlers } from \"../types\";\nimport { Attributes } from \"graphology-types\";\n\ntype EventType = keyof EventHandlers;\n\nfunction keySet<T>(record: Record<keyof T, unknown>): Set<string> {\n  return new Set<string>(Object.keys(record));\n}\n\nconst sigmaEvents = keySet<SigmaEvents>({\n  clickNode: true,\n  rightClickNode: true,\n  downNode: true,\n  enterNode: true,\n  leaveNode: true,\n  doubleClickNode: true,\n  wheelNode: true,\n  clickEdge: true,\n  rightClickEdge: true,\n  downEdge: true,\n  enterEdge: true,\n  leaveEdge: true,\n  doubleClickEdge: true,\n  wheelEdge: true,\n  clickStage: true,\n  rightClickStage: true,\n  downStage: true,\n  doubleClickStage: true,\n  wheelStage: true,\n  beforeRender: true,\n  afterRender: true,\n  kill: true,\n  upStage: true,\n  upEdge: true,\n  upNode: true,\n  enterStage: true,\n  leaveStage: true,\n  resize: true,\n  afterClear: true,\n  afterProcess: true,\n  beforeClear: true,\n  beforeProcess: true,\n});\n\nconst mouseEvents = keySet<MouseCaptorEvents>({\n  click: true,\n  rightClick: true,\n  doubleClick: true,\n  mouseup: true,\n  mousedown: true,\n  mousemove: true,\n  mousemovebody: true,\n  mouseleave: true,\n  mouseenter: true,\n  wheel: true,\n});\n\nconst touchEvents = keySet<TouchCaptorEvents>({\n  touchup: true,\n  touchdown: true,\n  touchmove: true,\n});\nconst cameraEvents = keySet<CameraEvents>({ updated: true });\n\n/**\n * React hook that helps you to listen Sigma’s events.\n * It handles for you all the lifecyle of listener (ie. on / remove)\n *\n * ```typescript\n * const registerEvents = useRegisterEvents();\n * const [setHoveredNode,setHoveredNode] = useState<string|null>(null);\n * ...\n * useEffect(() => {\n *  registerEvents({\n *    enterNode: event => setHoveredNode(event.node),\n *    leaveNode: event => setHoveredNode(null),\n *  });\n * }, []);\n *```\n * @category Hook\n */\nexport function useRegisterEvents<\n  N extends Attributes = Attributes,\n  E extends Attributes = Attributes,\n  G extends Attributes = Attributes,\n>(): (eventHandlers: Partial<EventHandlers>) => void {\n  const sigma = useSigma<N, E, G>();\n  const setSettings = useSetSettings<N, E, G>();\n  const [eventHandlers, setEventHandlers] = useState<Partial<EventHandlers>>({});\n\n  useEffect(() => {\n    if (!sigma || !eventHandlers) {\n      return;\n    }\n\n    const userEvents = eventHandlers;\n\n    // list of event types to register\n    const eventTypes = Object.keys(userEvents) as Array<EventType>;\n\n    // register events\n    eventTypes.forEach((event: EventType) => {\n      const eventHandler = userEvents[event] as (...args: unknown[]) => void;\n      if (sigmaEvents.has(event)) {\n        sigma.on(event as keyof SigmaEvents, eventHandler);\n      }\n      if (mouseEvents.has(event)) {\n        sigma.getMouseCaptor().on(event as keyof MouseCaptorEvents, eventHandler);\n      }\n      if (touchEvents.has(event)) {\n        sigma.getTouchCaptor().on(event as keyof TouchCaptorEvents, eventHandler);\n      }\n      if (cameraEvents.has(event)) {\n        sigma.getCamera().on(event as keyof CameraEvents, eventHandler);\n      }\n    });\n\n    // cleanup\n    return () => {\n      // remove events listener\n      if (sigma) {\n        eventTypes.forEach((event: EventType) => {\n          const eventHandler = userEvents[event] as (...args: unknown[]) => void;\n          if (sigmaEvents.has(event)) {\n            sigma.off(event as keyof SigmaEvents, eventHandler);\n          }\n          if (mouseEvents.has(event)) {\n            sigma.getMouseCaptor().off(event as keyof MouseCaptorEvents, eventHandler);\n          }\n          if (touchEvents.has(event)) {\n            sigma.getTouchCaptor().off(event as keyof TouchCaptorEvents, eventHandler);\n          }\n          if (cameraEvents.has(event)) {\n            sigma.getCamera().off(event as keyof CameraEvents, eventHandler);\n          }\n        });\n      }\n    };\n  }, [sigma, eventHandlers, setSettings]);\n\n  return setEventHandlers;\n}\n","import { useCallback } from \"react\";\nimport Graph from \"graphology\";\nimport { Attributes } from \"graphology-types\";\n\nimport { useSigma } from \"./useSigma\";\n\n/**\n * React hook that helps you to load a graph.\n * If a graph was previously loaded in Sigma/Graphology, per default it is cleared.\n * You can change this behaviour by settings the parameter `clear` to false.\n *\n * ```typescript\n * const loadGraph = useLoadGraph();\n * ...\n * useEffect(() => {\n *  loadGraph(erdosRenyi(UndirectedGraph, { order: 100, probability: 0.2 }), true);\n * }, []);\n *```\n * @category Hook\n */\nexport function useLoadGraph<\n  N extends Attributes = Attributes,\n  E extends Attributes = Attributes,\n  G extends Attributes = Attributes,\n>(): (graph: Graph<N, E, G>, clear?: boolean) => void {\n  const sigma = useSigma<N, E, G>();\n\n  return useCallback(\n    (graph: Graph<N, E, G>, clear = true) => {\n      if (sigma && graph) {\n        if (clear && sigma.getGraph().order > 0) sigma.getGraph().clear();\n        sigma.getGraph().import(graph);\n        sigma.refresh();\n      }\n    },\n    [sigma],\n  );\n}\n","export function getUniqueKey(): string {\n  return Math.random().toString(36).slice(2);\n}\n\nexport function isEqual(x: unknown, y: unknown): boolean {\n  // check the ref\n  if (x === y) return true;\n  // if both are object\n  if (typeof x == \"object\" && x != null && typeof y == \"object\" && y != null) {\n    // Check the number of properties\n    if (Object.keys(x).length != Object.keys(y).length) return false;\n\n    // for every props of x\n    for (const prop in x) {\n      // prop is missing in y, false\n      if (!Object.hasOwn(y, prop)) return false;\n      // prop in y is diff than the one in x, false\n      if (!isEqual((x as { [key: string]: unknown })[prop], (y as { [key: string]: unknown })[prop])) return false;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { AnimateOptions } from \"sigma/utils\";\nimport { CameraState } from \"sigma/types\";\n\nimport { isEqual } from \"../utils\";\nimport { useSigma } from \"./useSigma\";\n\ntype CameraOptions = Partial<AnimateOptions> & { factor?: number };\n\n/**\n * React hook that helps you to manage the camera.\n *\n * ```typescript\n * const {zoomIn, zoomOut, reset, goto, gotoNode } = useCamera();\n *```\n *\n * @category Hook\n */\nexport function useCamera(options?: CameraOptions): {\n  zoomIn: (options?: CameraOptions) => void;\n  zoomOut: (options?: CameraOptions) => void;\n  reset: (options?: Partial<AnimateOptions>) => void;\n  goto: (state: Partial<CameraState>, options?: Partial<AnimateOptions>) => void;\n  gotoNode: (nodeKey: string, options?: Partial<AnimateOptions>) => void;\n} {\n  const sigma = useSigma();\n  // Default camera options\n  const [defaultOptions, setDefaultOptions] = useState<CameraOptions>(options || {});\n  useEffect(() => {\n    if (!isEqual(defaultOptions, options || {})) setDefaultOptions(options || {});\n  }, [options]);\n\n  const zoomIn = useCallback(\n    (options?: CameraOptions) => {\n      sigma.getCamera().animatedZoom({ ...defaultOptions, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const zoomOut = useCallback(\n    (options?: CameraOptions) => {\n      sigma.getCamera().animatedUnzoom({ ...defaultOptions, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const reset = useCallback(\n    (options?: Partial<AnimateOptions>) => {\n      sigma.getCamera().animatedReset({ ...defaultOptions, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const goto = useCallback(\n    (state: Partial<CameraState>, options?: Partial<AnimateOptions>) => {\n      sigma.getCamera().animate(state, { ...defaultOptions, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const gotoNode = useCallback(\n    (nodeKey: string, options?: Partial<AnimateOptions>) => {\n      const nodeDisplayData = sigma.getNodeDisplayData(nodeKey);\n      if (nodeDisplayData) sigma.getCamera().animate(nodeDisplayData, { ...defaultOptions, ...options });\n      else console.log(`Node ${nodeKey} not found`);\n    },\n    [sigma, defaultOptions],\n  );\n\n  return { zoomIn, zoomOut, reset, goto, gotoNode };\n}\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useSigmaContext } from \"./context\";\n\nfunction toggleFullScreen(dom: HTMLElement) {\n  if (document.fullscreenElement !== dom) {\n    dom.requestFullscreen();\n  } else {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  }\n}\n\n/**\n * React hook that helps you to set graph in fullmode.\n *\n * ```typescript\n * const {toggle, isFullScreen} = useFullscreen();\n *```\n * @category Hook\n */\nexport function useFullScreen(\n  container?: HTMLElement | null,\n): {\n  toggle: () => void;\n  isFullScreen: boolean;\n} {\n  const context = useSigmaContext();\n  const [isFullScreen, setFullScreen] = useState<boolean>(false);\n  const [element, setElement] = useState<HTMLElement>(container ? container : context.container);\n  const toggleState = () => setFullScreen((v) => !v);\n\n  useEffect(() => {\n    document.addEventListener(\"fullscreenchange\", toggleState);\n    return () => document.removeEventListener(\"fullscreenchange\", toggleState);\n  }, [toggleState]);\n\n  useEffect(() => {\n    setElement(container || context.container);\n  }, [container, context.container]);\n\n  const toggle = useCallback(() => {\n    toggleFullScreen(element);\n  }, [element]);\n\n  return {\n    toggle,\n    isFullScreen,\n  };\n}\n","import React, {\n  CSSProperties,\n  Ref,\n  PropsWithChildren,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  ReactElement,\n} from \"react\";\nimport Graph from \"graphology\";\nimport { Sigma } from \"sigma\";\nimport { Settings } from \"sigma/settings\";\n\nimport { SigmaContextInterface, SigmaProvider } from \"../hooks/context\";\nimport { isEqual } from \"../utils\";\nimport { GraphType } from \"../types\";\nimport { Attributes } from \"graphology-types\";\n\n/**\n * Properties for `SigmaContainer` component\n */\nexport interface SigmaContainerProps<N extends Attributes, E extends Attributes, G extends Attributes> {\n  /**\n   * Graphology instance or constructor\n   */\n  graph?: GraphType<N, E, G>;\n  /**\n   * Sigma settings\n   */\n  settings?: Partial<Settings<N, E, G>>;\n  /**\n   * HTML id\n   */\n  id?: string;\n  /**\n   * HTML class\n   */\n  className?: string;\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n}\n\n/**\n * The `SigmaContainer` component is responsible of create the Sigma instance, and provide it to its child components using a React Context that can be accessible via the hook {@link useSigma}.\n *\n * ```jsx\n * <SigmaContainer id=\"sigma-graph\">\n *   <MyCustomGraph />\n * </SigmaContainer>\n *```\n * See [[SigmaContainerProps]] for more information.\n *\n * @category Component\n */\nconst SigmaContainerComponent = <\n  N extends Attributes = Attributes,\n  E extends Attributes = Attributes,\n  G extends Attributes = Attributes,\n>(\n  { graph, id, className, style, settings = {}, children }: PropsWithChildren<SigmaContainerProps<N, E, G>>,\n  ref: Ref<Sigma<N, E, G> | null>,\n) => {\n  // Root HTML element\n  const rootRef = useRef<HTMLDivElement>(null);\n  // HTML element for the sigma instance\n  const containerRef = useRef<HTMLDivElement>(null);\n  // Common html props for the container\n  const props = { className: `react-sigma ${className ? className : \"\"}`, id, style };\n  // Sigma instance\n  const [sigma, setSigma] = useState<Sigma<N, E, G> | null>(null);\n  // Sigma settings\n  const [sigmaSettings, setSigmaSettings] = useState<Partial<Settings<N, E, G>>>(settings);\n  useEffect(() => {\n    if (!isEqual(sigmaSettings, settings)) setSigmaSettings(settings);\n  }, [settings]);\n\n  /**\n   * When graph or settings changed\n   * => create sigma\n   */\n  useEffect(() => {\n    let instance: Sigma<N, E, G> | null = null;\n\n    if (containerRef.current !== null) {\n      let sigGraph = new Graph<N, E, G>();\n      if (graph) {\n        sigGraph = typeof graph === \"function\" ? new graph() : graph;\n      }\n\n      instance = new Sigma(sigGraph, containerRef.current, sigmaSettings);\n      if (sigma) instance.getCamera().setState(sigma.getCamera().getState());\n    }\n    setSigma(instance);\n\n    return () => {\n      if (instance) {\n        instance.kill();\n      }\n      setSigma(null);\n    };\n  }, [containerRef, graph, sigmaSettings]);\n\n  /**\n   * Forward the sigma ref\n   */\n  useImperativeHandle(ref, () => sigma, [sigma]);\n\n  /**\n   * Memoify the context\n   */\n  const context = useMemo(\n    () => (sigma && rootRef.current ? { sigma, container: rootRef.current as HTMLElement } : null),\n    [sigma, rootRef.current],\n  ) as SigmaContextInterface | null;\n\n  // When context is created we provide it to children\n  const contents = context !== null ? <SigmaProvider value={context}>{children}</SigmaProvider> : null;\n\n  return (\n    <div {...props} ref={rootRef}>\n      <div className=\"sigma-container\" ref={containerRef} />\n      {contents}\n    </div>\n  );\n};\n\n/**\n * Redefine forwardRef for generics\n */\nfunction fixedForwardRef<T, P = unknown>(\n  render: (props: P, ref: React.Ref<T>) => ReactElement,\n): (props: P & React.RefAttributes<T>) => ReactElement {\n  return forwardRef(render) as (props: P & React.RefAttributes<T>) => ReactElement;\n}\n\nexport const SigmaContainer = fixedForwardRef(SigmaContainerComponent);\n","import React, { CSSProperties, ReactNode } from \"react\";\n\n/**\n * Properties for `ControlsContainer` component.\n */\nexport interface ControlsContainerProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n  /**\n   * HTML class\n   */\n  className?: string;\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n  /**\n   * Position of the container\n   */\n  position?: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\";\n  /*\n   * @hidden\n   */\n  children?: ReactNode;\n}\n\n/**\n * The `ControlsContainer` is just a wrapper for other control components.\n * It defines their position and also their style with its CSS class `react-sigma-controls`.\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer position={\"bottom-right\"}>\n *     <ForceAtlasControl autoRunFor={2000} />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[ControlsContainerProps]] for more information.\n *\n * @category Component\n */\nexport const ControlsContainer: React.FC<ControlsContainerProps> = ({\n  id,\n  className,\n  style,\n  children,\n  position = \"bottom-left\",\n}: ControlsContainerProps) => {\n  // Common html props for the container\n  const props = { className: `react-sigma-controls ${className ? className : \"\"} ${position}`, id, style };\n\n  return <div {...props}>{children}</div>;\n};\n","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22plus%22%20class%3D%22svg-inline--fa%20fa-plus%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%20%20%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M416%20208H272V64c0-17.67-14.33-32-32-32h-32c-17.67%200-32%2014.33-32%2032v144H32c-17.67%200-32%2014.33-32%2032v32c0%2017.67%2014.33%2032%2032%2032h144v144c0%2017.67%2014.33%2032%2032%2032h32c17.67%200%2032-14.33%2032-32V304h144c17.67%200%2032-14.33%2032-32v-32c0-17.67-14.33-32-32-32z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22minus%22%20class%3D%22svg-inline--fa%20fa-minus%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M416%20208H32c-17.67%200-32%2014.33-32%2032v32c0%2017.67%2014.33%2032%2032%2032h384c17.67%200%2032-14.33%2032-32v-32c0-17.67-14.33-32-32-32z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22far%22%20data-icon%3D%22dot-circle%22%20class%3D%22svg-inline--fa%20fa-dot-circle%20fa-w-16%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M256%2056c110.532%200%20200%2089.451%20200%20200%200%20110.532-89.451%20200-200%20200-110.532%200-200-89.451-200-200%200-110.532%2089.451-200%20200-200m0-48C119.033%208%208%20119.033%208%20256s111.033%20248%20248%20248%20248-111.033%20248-248S392.967%208%20256%208zm0%20168c-44.183%200-80%2035.817-80%2080s35.817%2080%2080%2080%2080-35.817%2080-80-35.817-80-80-80z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","import React, { CSSProperties } from \"react\";\n\nimport { ReactComponent as ZoomInIcon } from \"../../assets/icons/plus-solid.svg\";\nimport { ReactComponent as ZoomOutIcon } from \"../../assets/icons/minus-solid.svg\";\nimport { ReactComponent as ZoomResetIcon } from \"../../assets/icons/dot-circle-regular.svg\";\nimport { useCamera } from \"../../hooks/useCamera\";\n\ntype ZoomLabelKeys = \"zoomIn\" | \"zoomOut\" | \"reset\";\n\n/**\n * Properties for `ZoomControl` component\n */\nexport interface ZoomControlProps {\n  /**\n   * HTML class that will be added to all div button wrapper\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style that will be added to all div button wrapper\n   */\n  style?: CSSProperties;\n\n  /**\n   * Number of ms for the zoom animation (default is 200ms)\n   */\n  animationDuration?: number;\n\n  /**\n   * It's possible to customize the button, by passing to JSX Element.\n   * First one is for the \"zoom in\", second for \"zoom out\" and third for \"view whole graph\".\n   * Example :\n   * ```jsx\n   * <ZoomControl>\n   *   <BsZoomIn />\n   *   <BsZoomOut />\n   *   <BiReset />\n   * </FullScreenControl>\n   * ```\n   */\n  children?: [JSX.Element, JSX.Element, JSX.Element];\n\n  /**\n   * Map of the labels we use in the component.\n   * This is usefull for I18N\n   */\n  labels?: { [Key in ZoomLabelKeys]?: string };\n}\n\n/**\n * The `ZoomControl` create three UI buttons that allows the user to\n * - zoom in\n * - zoom out\n * - reset zoom (ie. see the whole graph)\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <ZoomControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[ZoomControlProps]] for more information.\n *\n * @category Component\n */\nexport const ZoomControl: React.FC<ZoomControlProps> = ({\n  className,\n  style,\n  animationDuration = 200,\n  children,\n  labels = {},\n}: ZoomControlProps) => {\n  const { zoomIn, zoomOut, reset } = useCamera({ duration: animationDuration, factor: 1.5 });\n\n  // Common html props for the div wrapper\n  const htmlProps = {\n    style,\n    className: `react-sigma-control ${className || \"\"}`,\n  };\n\n  return (\n    <>\n      <div {...htmlProps}>\n        <button onClick={() => zoomIn()} title={labels[\"zoomIn\"] || \"Zoom In\"}>\n          {children ? children[0] : <ZoomInIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n      <div {...htmlProps}>\n        <button onClick={() => zoomOut()} title={labels[\"zoomOut\"] || \"Zoom Out\"}>\n          {children ? children[1] : <ZoomOutIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n      <div {...htmlProps}>\n        <button onClick={() => reset()} title={labels[\"reset\"] || \"See whole graph\"}>\n          {children ? children[2] : <ZoomResetIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n    </>\n  );\n};\n","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22expand%22%20class%3D%22svg-inline--fa%20fa-expand%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M0%20180V56c0-13.3%2010.7-24%2024-24h124c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H64v84c0%206.6-5.4%2012-12%2012H12c-6.6%200-12-5.4-12-12zM288%2044v40c0%206.6%205.4%2012%2012%2012h84v84c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12V56c0-13.3-10.7-24-24-24H300c-6.6%200-12%205.4-12%2012zm148%20276h-40c-6.6%200-12%205.4-12%2012v84h-84c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h124c13.3%200%2024-10.7%2024-24V332c0-6.6-5.4-12-12-12zM160%20468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6%200-12%205.4-12%2012v124c0%2013.3%2010.7%2024%2024%2024h124c6.6%200%2012-5.4%2012-12z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22compress%22%20class%3D%22svg-inline--fa%20fa-compress%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M436%20192H312c-13.3%200-24-10.7-24-24V44c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v84h84c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6%200-12%205.4-12%2012v84H12c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h124c13.3%200%2024-10.7%2024-24zm0%20300V344c0-13.3-10.7-24-24-24H12c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h84v84c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12zm192%200v-84h84c6.6%200%2012-5.4%2012-12v-40c0-6.6-5.4-12-12-12H312c-13.3%200-24%2010.7-24%2024v124c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","import React, { CSSProperties, RefObject } from \"react\";\n\nimport { ReactComponent as EnterIcon } from \"../../assets/icons/expand-solid.svg\";\nimport { ReactComponent as ExitIcon } from \"../../assets/icons/compress-solid.svg\";\nimport { useFullScreen } from \"../../hooks/useFullScreen\";\n\ntype FullScreenLabelKeys = \"enter\" | \"exit\";\n\n/**\n * Properties for `FullScreenControl` component.\n */\nexport interface FullScreenControlProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n\n  /**\n   * HTML class\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n\n  /**\n   * If defined, this container will be taken for the fullscreen instead of the sigma one.\n   */\n  container?: RefObject<HTMLElement>;\n\n  /**\n   * It's possible to customize the button, by passing to JSX Element.\n   * First one is for the \"enter fullscreen\", and the second to \"exit fullscreen\".\n   * Example :\n   * ```jsx\n   * <FullScreenControl>\n   *   <BiFullscreen />\n   *   <BiExitFullscreen />\n   * </FullScreenControl>\n   * ```\n   */\n  children?: [JSX.Element, JSX.Element];\n\n  /**\n   * Map of the labels we use in the component.\n   * This is usefull for I18N\n   */\n  labels?: { [Key in FullScreenLabelKeys]?: string };\n}\n\n/**\n * The `FullScreenControl` create a UI button that allows the user to display the graph in fullscreen\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <FullScreenControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[FullScreenControlProps]] for more information.\n *\n * @category Component\n */\nexport const FullScreenControl: React.FC<FullScreenControlProps> = ({\n  id,\n  className,\n  style,\n  container,\n  children,\n  labels = {},\n}: FullScreenControlProps) => {\n  // Get Sigma\n  const { isFullScreen, toggle } = useFullScreen(container?.current);\n\n  // Common html props for the div\n  const htmlProps = {\n    className: `react-sigma-control ${className || \"\"}`,\n    id,\n    style,\n  };\n\n  if (!document.fullscreenEnabled) return null;\n\n  return (\n    <div {...htmlProps}>\n      <button\n        onClick={toggle}\n        title={isFullScreen ? labels[\"exit\"] || \"Exit fullscreen\" : labels[\"enter\"] || \"Enter fullscreen\"}\n      >\n        {children && !isFullScreen && children[0]}\n        {children && isFullScreen && children[1]}\n        {!children && !isFullScreen && <EnterIcon style={{ width: \"1em\" }} />}\n        {!children && isFullScreen && <ExitIcon style={{ width: \"1em\" }} />}\n      </button>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useEffect, useState, CSSProperties } from \"react\";\nimport { Attributes } from \"graphology-types\";\n\nimport { getUniqueKey } from \"../../utils\";\nimport { useSigma } from \"../../hooks/useSigma\";\nimport { useCamera } from \"../../hooks/useCamera\";\nimport { useRegisterEvents } from \"../../hooks/useRegisterEvents\";\n\ntype SearchLabelKeys = \"text\" | \"placeholder\";\n\n/**\n * Properties for `SearchControl` component\n */\nexport interface SearchControlProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n\n  /**\n   * HTML class\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n\n  /**\n   * Map of the labels we use in the component.\n   * This is usefull for I18N\n   */\n  labels?: { [Key in SearchLabelKeys]?: string };\n}\n\n/**\n * The `SearchControl` create an input text where user can search a node in the graph by its label.\n * There is an autocomplete based on includes & lower case.\n * When a node is found, the graph will focus on the highlighted node\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <SearchControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[SearchControlProps]] for more information.\n *\n * @category Component\n */\nexport const SearchControl: React.FC<SearchControlProps> = ({\n  id,\n  className,\n  style,\n  labels = {},\n}: SearchControlProps) => {\n  // Get sigma\n  const sigma = useSigma();\n  // Get event hook\n  const registerEvents = useRegisterEvents();\n  // Get camera hook\n  const { gotoNode } = useCamera();\n  // Search value\n  const [search, setSearch] = useState<string>(\"\");\n  // Datalist values\n  const [values, setValues] = useState<Array<{ id: string; label: string }>>([]);\n  // Selected\n  const [selected, setSelected] = useState<string | null>(null);\n  // random id for the input\n  const [inputId, setInputId] = useState<string>(\"\");\n\n  /**\n   * When component mount, we set a random input id.\n   */\n  useEffect(() => {\n    setInputId(`search-${getUniqueKey()}`);\n  }, []);\n\n  /**\n   * When the search input changes, recompute the autocomplete values.\n   */\n  useEffect(() => {\n    const newValues: Array<{ id: string; label: string }> = [];\n    if (!selected && search.length > 1) {\n      sigma.getGraph().forEachNode((key: string, attributes: Attributes): void => {\n        if (attributes.label && attributes.label.toLowerCase().includes(search.toLowerCase()))\n          newValues.push({ id: key, label: attributes.label });\n      });\n    }\n    setValues(newValues);\n  }, [search]);\n\n  /**\n   * When use clik on the stage\n   *  => reset the selection\n   */\n  useEffect(() => {\n    registerEvents({\n      clickStage: () => {\n        setSelected(null);\n        setSearch(\"\");\n      },\n    });\n  }, [registerEvents]);\n\n  /**\n   * When the selected item changes, highlighted the node and center the camera on it.\n   */\n  useEffect(() => {\n    if (!selected) {\n      return;\n    }\n\n    sigma.getGraph().setNodeAttribute(selected, \"highlighted\", true);\n    gotoNode(selected);\n\n    return () => {\n      sigma.getGraph().setNodeAttribute(selected, \"highlighted\", false);\n    };\n  }, [selected]);\n\n  /**\n   * On change event handler for the search input, to set the state.\n   */\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const searchString = e.target.value;\n    const valueItem = values.find((value) => value.label === searchString);\n    if (valueItem) {\n      setSearch(valueItem.label);\n      setValues([]);\n      setSelected(valueItem.id);\n    } else {\n      setSelected(null);\n      setSearch(searchString);\n    }\n  };\n\n  // Common html props for the div\n  const htmlProps = {\n    className: `react-sigma-search ${className ? className : \"\"}`,\n    id,\n    style,\n  };\n\n  return (\n    <div {...htmlProps}>\n      <label htmlFor={inputId} style={{ display: \"none\" }}>\n        {labels[\"text\"] || \"Search a node\"}\n      </label>\n      <input\n        id={inputId}\n        type=\"text\"\n        placeholder={labels[\"placeholder\"] || \"Search...\"}\n        list={`${inputId}-datalist`}\n        value={search}\n        onChange={onInputChange}\n      />\n      <datalist id={`${inputId}-datalist`}>\n        {values.map((value: { id: string; label: string }) => (\n          <option key={value.id} value={value.label}>\n            {value.label}\n          </option>\n        ))}\n      </datalist>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}